{"version":3,"sources":["components/shared-components/AvatarStatus/index.js","redux/actions/Project.js","../node_modules/react-number-format/dist/react-number-format.es.js","../node_modules/rc-input-number/es/utils/supportUtil.js","../node_modules/rc-input-number/es/utils/numberUtil.js","../node_modules/rc-input-number/es/utils/MiniDecimal.js","../node_modules/rc-input-number/es/StepHandler.js","../node_modules/rc-input-number/es/hooks/useLayoutEffect.js","../node_modules/rc-input-number/es/hooks/useUpdateEffect.js","../node_modules/rc-input-number/es/InputNumber.js","../node_modules/rc-input-number/es/hooks/useCursor.js","../node_modules/rc-input-number/es/hooks/useFrame.js","../node_modules/rc-input-number/es/index.js","../node_modules/@ant-design/icons-svg/es/asn/UpOutlined.js","../node_modules/@ant-design/icons/es/icons/UpOutlined.js","../node_modules/antd/es/input-number/index.js","views/app-views/sales/components/ProductModal.js","views/app-views/sales/create/selectProduct.js"],"names":["AvatarStatus","props","name","suffix","subTitle","id","onNameClick","type","icon","size","shape","gap","text","className","onClick","dashboard","DASHBOARD","resetProject","RESET_PROJECT","account","date","sort","page","ACCOUNT","createAccount","value","CREATE_ACCOUNT","payload","updateTransaction","UPDATE_TRANSACTION","deleteTransaction","pk","DELETE_TRANSACTION","getOrderList","data","GET_ORDER_LIST","getOrderImages","GET_ORDERIMAGES","getOrderItems","GET_ORDERITEMS","createOrder","CREATE_ORDER","createOrderItem","CREATE_ORDERITEM","updateOrder","UPDATE_ORDER","deleteOrder","DELETE_ORDER","getCustomerList","GET_CUSTOMER_LIST","getCustomer","GET_CUSTOMER","createCustomer","CREATE_CUSTOMER","updateCustomer","UPDATE_CUSTOEMR","deleteCustomer","DELETE_CUSTOMER","getProduct","GET_PRODUCT_LIST","postProduct","CREATE_PRODUCT","updateProduct","UPDATE_PRODUCT","deleteProduct","DELETE_PRODUCT","getCategory","GET_CATEGORY_LIST","postCategory","CREATE_CATEGORY","updateCategory","UPDATE_CATEGORY","deleteCategory","DELETE_CATEGORY","getFarmList","GET_FARM_LIST","createFarm","CREATE_FARM","updateFarm","UPDATE_FARM","deleteFarm","DELETE_FARM","getLogList","GET_LOG_LIST","createLog","CREATE_LOG","updateLog","UPDATE_LOG","deleteLog","logPk","DELETE_LOG","noop","charIsNumber","char","match","isNil","val","undefined","escapeRegExp","str","replace","splitDecimal","numStr","allowNegative","hasNagation","addNegation","parts","split","beforeDecimal","afterDecimal","limitToScale","scale","fixedDecimalScale","filler","i","repeat","count","Array","join","setCaretPosition","el","caretPos","createTextRange","range","move","select","selectionStart","focus","setSelectionRange","clamp","num","min","max","Math","getCurrentCaretPosition","selectionEnd","defaultProps","displayType","decimalSeparator","thousandsGroupStyle","prefix","allowEmptyFormatting","allowLeadingZeros","isNumericString","onValueChange","onChange","onKeyDown","onMouseUp","onFocus","onBlur","isAllowed","NumberFormat","superclass","call","this","defaultValue","validateProps","formattedValue","formatValueProp","state","numAsString","removeFormatting","mounted","selectionBeforeInput","bind","__proto__","prototype","Object","create","constructor","componentDidMount","setState","componentDidUpdate","prevProps","updateValueIfRequired","componentWillUnmount","clearTimeout","focusTimeout","caretPositionTimeout","ref","focusedElm","stateValue","lastNumStr","lastValueWithNewFormat","formatNumString","floatValue","parseFloat","lastFloatValue","isNaN","updateValue","input","source","event","getFloatString","decimalScale","getSeparators","numRegex","getNumberRegex","hasNegation","firstDecimalIndex","indexOf","substring","length","RegExp","g","ignoreDecimalSeparator","format","customNumerals","ref$1","thousandSeparator","allowedDecimalSeparators","getMaskAtIndex","index","mask","getValueObject","Error","toString","setPatchedCaretPosition","currentValue","setTimeout","correctCaretPosition","direction","firstHashPosition","lastIndexOf","nextPos","caretLeftBound","caretRightBound","getCaretPosition","inputValue","j","inputNumber","formattedNumber","currentInputChar","currentFormatChar","removePrefixAndSuffix","isNegative","suffixLastIndex","removePatternFormatting","formatArray","filter","start","ln","part","formatWithPattern","hashCount","formattedNumberAry","formatAsNumber","hasDecimalSeparator","ref$2","thousandsGroupRegex","getThousandsGroupRegex","search","applyThousandSeparator","customNumeralRegex","digit","isNonNumericFalsy","sign","coefficient","exponent","Number","decimalIndex","coffiecientLn","abs","toNumericString","shoudHaveDecimalSeparator","roundedDecimalParts","toFixed","reverse","reduce","roundedStr","current","idx","roundToPrecision","formatInput","formatNegation","negationRegex","doubleNegationRegex","test","removeNegation","isCharacterAFormat","correctInputValue","lastValue","this$1","ref$3","prevValue","newValue","prevLength","newLength","end","findChangedIndex","separator","substr","leftBound","rightBound","deletedValues","concat","find","deletedVal","deletedValuePortion","recordIndexOfFormatCharacters","resolvedPortion","forEach","currentPortion","push","keys","splice","numericString","ref$4","isBeforeDecimalPoint","params","currentCaretPosition","e","target","isChangeAllowed","fixLeadingZero","expectedCaretPosition","key","negativeRegex","isPatternFormat","newCaretPosition","preventDefault","isUnitTestRun","caretPosition","persist","render","customInput","renderText","getInputRef","otherProps","obj","exclude","k","hasOwnProperty","objectWithoutProperties","inputMode","navigator","platform","addInputMode","inputProps","assign","React","createElement","CustomInput","Component","supportBigInt","BigInt","trimNumber","trim","negative","startsWith","slice","trimStr","splitNumber","integerStr","decimalStr","negativeStr","fullStr","isE","number","String","includes","getNumberPrecision","precision","decimalMatch","validateNumber","num2str","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","NumberDecimal","_classCallCheck","origin","empty","_createClass","toNumber","isInvalidate","maxPrecision","isEmpty","add","negate","safe","arguments","BigIntDecimal","integer","decimal","decimalLen","nan","mergedValue","trimRet","numbers","padStart","decimalLength","getMark","getIntegerStr","getDecimalStr","padEnd","clone","offset","maxDecimalLength","_trimNumber","alignDecimal","hydrateValueStr","NaN","getMiniDecimal","separatorStr","_trimNumber2","precisionDecimalStr","numberWithoutDecimal","advancedNum","StepHandler","_ref","prefixCls","upNode","downNode","upDisabled","downDisabled","onStep","stepTimeoutRef","onStepRef","onStepMouseDown","up","loopStep","onStopStep","isMobile","handlerClassName","upClassName","classNames","_defineProperty","downClassName","sharedHandlerProps","unselectable","role","onMouseLeave","_extends","onMouseDown","useLayoutEffect","canUseDom","useUpdateEffect","callback","condition","initRef","_excluded","getDecimalValue","stringMode","decimalValue","getDecimalIfValidate","InputNumber","_classNames","_props$prefixCls","style","_props$step","step","disabled","readOnly","upHandler","downHandler","keyboard","_props$controls","controls","parser","formatter","onInput","onPressEnter","_objectWithoutProperties","inputClassName","inputRef","_React$useState","_React$useState2","_slicedToArray","setFocus","userTypingRef","compositionRef","_React$useState3","_React$useState4","setDecimalValue","getPrecision","userTyping","mergedParser","parsedStr","inputValueRef","mergedFormatter","mergedPrecision","_React$useState5","initValue","_typeof","_React$useState6","setInternalInputValue","setInputValue","maxDecimal","minDecimal","lessEquals","_useCursor","focused","selectionRef","useRef","beforeTxt","afterTxt","_selectionRef$current","startPos","endsWith","beforeLastChar","newIndex","warning","message","useCursor","_useCursor2","recordCursor","restoreCursor","getRangeValue","isInRange","triggerValueUpdate","newDecimal","isRangeValidate","equals","onNextPromise","idRef","cleanUp","raf","cancel","useEffect","useFrame","collectInputValue","inputStr","finalDecimal","nextInputStr","onInternalStep","_inputRef$current","stepDecimal","updatedValue","flushInputValue","parsedValue","formatValue","currentParsedValue","which","KeyCode","ENTER","UP","DOWN","onKeyUp","onCompositionStart","onCompositionEnd","autoComplete","composeRef","displayName","UpOutlined","AntdIcon","_objectSpread","UpOutlinedSvg","__rest","s","t","p","getOwnPropertySymbols","propertyIsEnumerable","_React$useContext","ConfigContext","getPrefixCls","SizeContext","customizeSize","customizePrefixCls","addonBefore","addonAfter","_props$bordered","bordered","others","upIcon","downIcon","DownOutlined","mergeSize","inputNumberClass","element","RcInputNumber","_classNames3","wrapperClassName","addonClassName","addonBeforeNode","addonAfterNode","mergedWrapperClassName","mergedGroupClassName","cloneElement","ProductModal","handleOk","handleCancel","visible","product","useState","customer","setCustomer","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","record","qty","tableColumns","title","dataIndex","_","sorter","a","b","utils","antdTableSorter","price","Flex","alignItems","stockCount","status","onOk","onCancel","width","placeholder","SearchOutlined","currentTarget","onSearch","initializeList","columns","rowKey","dataSource","result","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","error","uploadButton","PlusOutlined","mapDispatchToProps","connect","project","loading","category","pages","orderPk","location","previewVisible","setPreviewVisible","setValidator","previewImage","setPreviewImage","fileList","setFileList","products","setProducts","showProductModal","setShowProductModal","cart","setCart","history","useHistory","handlePreview","url","preview","originFileObj","prev","handleproducts","x","item","goBack","action","API_BASE_URL","headers","Authorization","localStorage","getItem","withCredentials","listType","onPreview","footer","alt","src","order"],"mappings":"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","file":"static/js/19.7d1ff090.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AvatarStatus = (props) => {\n  const { name, suffix, subTitle, id, type, icon, size, shape, gap, text, onNameClick } = props;\n  return (\n    <div className=\"avatar-status d-flex align-items-center\">\n      <div className=\"ml-2\">\n        <div>\n          {onNameClick ? (\n            <div onClick={() => onNameClick({ name, subTitle, id })} className=\"avatar-status-name clickable\">\n              {name}\n            </div>\n          ) : (\n            <div className=\"avatar-status-name\">{name}</div>\n          )}\n          <span>{suffix}</span>\n        </div>\n        <div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\n      </div>\n    </div>\n  );\n};\n\nAvatarStatus.propTypes = {\n  name: PropTypes.string,\n  src: PropTypes.string,\n  type: PropTypes.string,\n  onNameClick: PropTypes.func,\n};\n\nexport default AvatarStatus;\n","import {\n  ACCOUNT,\n  CREATE_ACCOUNT,\n  DASHBOARD,\n  UPDATE_TRANSACTION,\n  RESET_PROJECT,\n  DELETE_TRANSACTION,\n  GET_ORDER_LIST,\n  GET_ORDER,\n  GET_CUSTOMER_LIST,\n  GET_CUSTOMER,\n  CREATE_CUSTOMER,\n  UPDATE_CUSTOEMR,\n  DELETE_CUSTOMER,\n  GET_PRODUCT_LIST,\n  CREATE_PRODUCT,\n  UPDATE_PRODUCT,\n  DELETE_PRODUCT,\n  GET_CATEGORY_LIST,\n  CREATE_CATEGORY,\n  UPDATE_CATEGORY,\n  DELETE_CATEGORY,\n  CREATE_ORDER,\n  UPDATE_ORDER,\n  DELETE_ORDER,\n  CREATE_ORDERITEM,\n  CREATE_ORDERIMAGE,\n  GET_ORDERIMAGES,\n  GET_ORDERITEMS,\n  GET_FARM_LIST,\n  CREATE_FARM,\n  UPDATE_FARM,\n  DELETE_FARM,\n  GET_LOG_LIST,\n  CREATE_LOG,\n  UPDATE_LOG,\n  DELETE_LOG,\n} from \"../constants/Project\";\n\nexport const dashboard = () => {\n  return {\n    type: DASHBOARD,\n  };\n};\n\nexport const resetProject = () => {\n  return {\n    type: RESET_PROJECT,\n  };\n};\n\nexport const account = (date, sort, page) => {\n  return {\n    type: ACCOUNT,\n    date,\n    sort,\n    page,\n  };\n};\n\nexport const createAccount = (value) => {\n  return {\n    type: CREATE_ACCOUNT,\n    payload: value,\n  };\n};\n\nexport const updateTransaction = (value) => {\n  return {\n    type: UPDATE_TRANSACTION,\n    payload: value,\n  };\n};\n\nexport const deleteTransaction = (pk) => {\n  return {\n    type: DELETE_TRANSACTION,\n    payload: pk,\n  };\n};\n\n// order\nexport const getOrderList = (data) => {\n  return {\n    type: GET_ORDER_LIST,\n    data: data,\n  };\n};\n\nexport const getOrderImages = (data) => {\n  return {\n    type: GET_ORDERIMAGES,\n    data: data,\n  };\n};\n\nexport const getOrderItems = (data) => {\n  return {\n    type: GET_ORDERITEMS,\n    data: data,\n  };\n};\n\nexport const createOrder = (data) => {\n  return {\n    type: CREATE_ORDER,\n    data,\n  };\n};\n\nexport const createOrderItem = (data) => {\n  return {\n    type: CREATE_ORDERITEM,\n    data,\n  };\n};\n\nexport const updateOrder = (data) => {\n  return {\n    type: UPDATE_ORDER,\n    data,\n  };\n};\n\nexport const deleteOrder = (pk) => {\n  return {\n    type: DELETE_ORDER,\n    pk,\n  };\n};\n\nexport const createOrderImage = (data) => {\n  return {\n    type: CREATE_ORDERIMAGE,\n    data,\n  };\n};\n\n// customer\nexport const getCustomerList = (data) => {\n  return {\n    type: GET_CUSTOMER_LIST,\n    data,\n  };\n};\n\nexport const getCustomer = (pk) => {\n  return {\n    type: GET_CUSTOMER,\n    payload: pk,\n  };\n};\n\nexport const createCustomer = (data) => {\n  return {\n    type: CREATE_CUSTOMER,\n    data,\n  };\n};\n\nexport const updateCustomer = (data) => {\n  return {\n    type: UPDATE_CUSTOEMR,\n    data: data,\n  };\n};\n\nexport const deleteCustomer = (pk) => {\n  return {\n    type: DELETE_CUSTOMER,\n    pk,\n  };\n};\n\n//PRODUCT\nexport const getProduct = (data) => {\n  return {\n    type: GET_PRODUCT_LIST,\n    data,\n  };\n};\n\nexport const postProduct = (data) => {\n  return {\n    type: CREATE_PRODUCT,\n    data,\n  };\n};\n\nexport const updateProduct = (data) => {\n  return {\n    type: UPDATE_PRODUCT,\n    data,\n  };\n};\n\nexport const deleteProduct = (pk) => {\n  return {\n    type: DELETE_PRODUCT,\n    pk,\n  };\n};\n\n//Category\nexport const getCategory = (data) => {\n  return {\n    type: GET_CATEGORY_LIST,\n    data,\n  };\n};\n\nexport const postCategory = (data) => {\n  return {\n    type: CREATE_CATEGORY,\n    data,\n  };\n};\n\nexport const updateCategory = (data) => {\n  return {\n    type: UPDATE_CATEGORY,\n    data,\n  };\n};\n\nexport const deleteCategory = (pk) => {\n  return {\n    type: DELETE_CATEGORY,\n    pk,\n  };\n};\n\n// Farms\nexport const getFarmList = (data) => {\n  return {\n    type: GET_FARM_LIST,\n    data,\n  };\n};\n\nexport const createFarm = (data) => {\n  return {\n    type: CREATE_FARM,\n    data,\n  };\n};\n\nexport const updateFarm = (data) => {\n  return {\n    type: UPDATE_FARM,\n    data,\n  };\n};\n\nexport const deleteFarm = (pk) => {\n  return {\n    type: DELETE_FARM,\n    pk,\n  };\n};\n\n//LOGS\nexport const getLogList = (data, date, page) => {\n  return {\n    type: GET_LOG_LIST,\n    data,\n    date,\n    page,\n  };\n};\n\nexport const createLog = (data, pk) => {\n  return {\n    type: CREATE_LOG,\n    data,\n    pk,\n  };\n};\n\nexport const updateLog = (data, pk) => {\n  return {\n    type: UPDATE_LOG,\n    data,\n    pk,\n  };\n};\n\nexport const deleteLog = (pk, logPk) => {\n  return {\n    type: DELETE_LOG,\n    pk,\n    logPk,\n  };\n};\n","/**\n * react-number-format - 4.9.3\n * Author : Sudhanshu Yadav\n * Copyright (c) 2016, 2022 to Sudhanshu Yadav, released under the MIT license.\n * https://github.com/s-yadav/react-number-format\n */\n\nimport React from 'react';\n\n//     \n\n                                                               \n\n// basic noop function\nfunction noop() {}\nfunction returnTrue() {\n  return true;\n}\n\nfunction charIsNumber(char         ) {\n  return !!(char || '').match(/\\d/);\n}\n\nfunction isNil(val     ) {\n  return val === null || val === undefined;\n}\n\nfunction escapeRegExp(str        ) {\n  return str.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&');\n}\n\nfunction getThousandsGroupRegex(thousandsGroupStyle        ) {\n  switch (thousandsGroupStyle) {\n    case 'lakh':\n      return /(\\d+?)(?=(\\d\\d)+(\\d)(?!\\d))(\\.\\d+)?/g;\n    case 'wan':\n      return /(\\d)(?=(\\d{4})+(?!\\d))/g;\n    case 'thousand':\n    default:\n      return /(\\d)(?=(\\d{3})+(?!\\d))/g;\n  }\n}\n\nfunction applyThousandSeparator(\n  str        ,\n  thousandSeparator        ,\n  thousandsGroupStyle        \n) {\n  var thousandsGroupRegex = getThousandsGroupRegex(thousandsGroupStyle);\n  var index = str.search(/[1-9]/);\n  index = index === -1 ? str.length : index;\n  return (\n    str.substring(0, index) +\n    str.substring(index, str.length).replace(thousandsGroupRegex, '$1' + thousandSeparator)\n  );\n}\n\n//spilt a float number into different parts beforeDecimal, afterDecimal, and negation\nfunction splitDecimal(numStr        , allowNegative) {\n  if ( allowNegative === void 0 ) allowNegative          = true;\n\n  var hasNagation = numStr[0] === '-';\n  var addNegation = hasNagation && allowNegative;\n  numStr = numStr.replace('-', '');\n\n  var parts = numStr.split('.');\n  var beforeDecimal = parts[0];\n  var afterDecimal = parts[1] || '';\n\n  return {\n    beforeDecimal: beforeDecimal,\n    afterDecimal: afterDecimal,\n    hasNagation: hasNagation,\n    addNegation: addNegation,\n  };\n}\n\nfunction fixLeadingZero(numStr         ) {\n  if (!numStr) { return numStr; }\n  var isNegative = numStr[0] === '-';\n  if (isNegative) { numStr = numStr.substring(1, numStr.length); }\n  var parts = numStr.split('.');\n  var beforeDecimal = parts[0].replace(/^0+/, '') || '0';\n  var afterDecimal = parts[1] || '';\n\n  return (\"\" + (isNegative ? '-' : '') + beforeDecimal + (afterDecimal ? (\".\" + afterDecimal) : ''));\n}\n\n/**\n * limit decimal numbers to given scale\n * Not used .fixedTo because that will break with big numbers\n */\nfunction limitToScale(numStr        , scale        , fixedDecimalScale         ) {\n  var str = '';\n  var filler = fixedDecimalScale ? '0' : '';\n  for (var i = 0; i <= scale - 1; i++) {\n    str += numStr[i] || filler;\n  }\n  return str;\n}\n\nfunction repeat(str, count) {\n  return Array(count + 1).join(str);\n}\n\nfunction toNumericString(num) {\n  num += ''; // typecast number to string\n\n  // store the sign and remove it from the number.\n  var sign = num[0] === '-' ? '-' : '';\n  if (sign) { num = num.substring(1); }\n\n  // split the number into cofficient and exponent\n  var ref = num.split(/[eE]/g);\n  var coefficient = ref[0];\n  var exponent = ref[1];\n\n  // covert exponent to number;\n  exponent = Number(exponent);\n\n  // if there is no exponent part or its 0, return the coffiecient with sign\n  if (!exponent) { return sign + coefficient; }\n\n  coefficient = coefficient.replace('.', '');\n\n  /**\n   * for scientific notation the current decimal index will be after first number (index 0)\n   * So effective decimal index will always be 1 + exponent value\n   */\n  var decimalIndex = 1 + exponent;\n\n  var coffiecientLn = coefficient.length;\n\n  if (decimalIndex < 0) {\n    // if decimal index is less then 0 add preceding 0s\n    // add 1 as join will have\n    coefficient = '0.' + repeat('0', Math.abs(decimalIndex)) + coefficient;\n  } else if (decimalIndex >= coffiecientLn) {\n    // if decimal index is less then 0 add leading 0s\n    coefficient = coefficient + repeat('0', decimalIndex - coffiecientLn);\n  } else {\n    // else add decimal point at proper index\n    coefficient =\n      (coefficient.substring(0, decimalIndex) || '0') + '.' + coefficient.substring(decimalIndex);\n  }\n\n  return sign + coefficient;\n}\n\n/**\n * This method is required to round prop value to given scale.\n * Not used .round or .fixedTo because that will break with big numbers\n */\nfunction roundToPrecision(numStr        , scale        , fixedDecimalScale         ) {\n  //if number is empty don't do anything return empty string\n  if (['', '-'].indexOf(numStr) !== -1) { return numStr; }\n\n  var shoudHaveDecimalSeparator = numStr.indexOf('.') !== -1 && scale;\n  var ref = splitDecimal(numStr);\n  var beforeDecimal = ref.beforeDecimal;\n  var afterDecimal = ref.afterDecimal;\n  var hasNagation = ref.hasNagation;\n  var floatValue = parseFloat((\"0.\" + (afterDecimal || '0')));\n  var floatValueStr =\n    afterDecimal.length <= scale ? (\"0.\" + afterDecimal) : floatValue.toFixed(scale);\n  var roundedDecimalParts = floatValueStr.split('.');\n  var intPart = beforeDecimal\n    .split('')\n    .reverse()\n    .reduce(function (roundedStr, current, idx) {\n      if (roundedStr.length > idx) {\n        return (\n          (Number(roundedStr[0]) + Number(current)).toString() +\n          roundedStr.substring(1, roundedStr.length)\n        );\n      }\n      return current + roundedStr;\n    }, roundedDecimalParts[0]);\n\n  var decimalPart = limitToScale(\n    roundedDecimalParts[1] || '',\n    Math.min(scale, afterDecimal.length),\n    fixedDecimalScale\n  );\n  var negation = hasNagation ? '-' : '';\n  var decimalSeparator = shoudHaveDecimalSeparator ? '.' : '';\n  return (\"\" + negation + intPart + decimalSeparator + decimalPart);\n}\n\n/** set the caret positon in an input field **/\nfunction setCaretPosition(el                  , caretPos        ) {\n  el.value = el.value;\n  // ^ this is used to not only get 'focus', but\n  // to make sure we don't have it everything -selected-\n  // (it causes an issue in chrome, and having it doesn't hurt any other browser)\n  if (el !== null) {\n    if (el.createTextRange) {\n      var range = el.createTextRange();\n      range.move('character', caretPos);\n      range.select();\n      return true;\n    }\n    // (el.selectionStart === 0 added for Firefox bug)\n    if (el.selectionStart || el.selectionStart === 0) {\n      el.focus();\n      el.setSelectionRange(caretPos, caretPos);\n      return true;\n    }\n\n    // fail city, fortunately this never happens (as far as I've tested) :)\n    el.focus();\n    return false;\n  }\n}\n\n/**\n  Given previous value and newValue it returns the index\n  start - end to which values have changed.\n  This function makes assumption about only consecutive\n  characters are changed which is correct assumption for caret input.\n*/\nfunction findChangedIndex(prevValue        , newValue        ) {\n  var i = 0,\n    j = 0;\n  var prevLength = prevValue.length;\n  var newLength = newValue.length;\n  while (prevValue[i] === newValue[i] && i < prevLength) { i++; }\n\n  //check what has been changed from last\n  while (\n    prevValue[prevLength - 1 - j] === newValue[newLength - 1 - j] &&\n    newLength - j > i &&\n    prevLength - j > i\n  ) {\n    j++;\n  }\n\n  return { start: i, end: prevLength - j };\n}\n\n/*\n  Returns a number whose value is limited to the given range\n*/\nfunction clamp(num        , min        , max        ) {\n  return Math.min(Math.max(num, min), max);\n}\n\nfunction getCurrentCaretPosition(el                  ) {\n  /*Max of selectionStart and selectionEnd is taken for the patch of pixel and other mobile device caret bug*/\n  return Math.max(el.selectionStart, el.selectionEnd);\n}\n\nfunction addInputMode(format                                   ) {\n  return (\n    format ||\n    (typeof navigator !== 'undefined' &&\n      !(navigator.platform && /iPhone|iPod/.test(navigator.platform)))\n  );\n}\n\n//     \nfunction objectWithoutProperties (obj, exclude) { var target = {}; for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k]; return target; }\n\nvar defaultProps = {\n  displayType: 'input',\n  decimalSeparator: '.',\n  thousandsGroupStyle: 'thousand',\n  fixedDecimalScale: false,\n  prefix: '',\n  suffix: '',\n  allowNegative: true,\n  allowEmptyFormatting: false,\n  allowLeadingZeros: false,\n  isNumericString: false,\n  type: 'text',\n  onValueChange: noop,\n  onChange: noop,\n  onKeyDown: noop,\n  onMouseUp: noop,\n  onFocus: noop,\n  onBlur: noop,\n  isAllowed: returnTrue,\n};\nvar NumberFormat = /*@__PURE__*/(function (superclass) {\n  function NumberFormat(props        ) {\n    superclass.call(this, props);\n    var defaultValue = props.defaultValue;\n\n    //validate props\n    this.validateProps();\n\n    var formattedValue = this.formatValueProp(defaultValue);\n\n    this.state = {\n      value: formattedValue,\n      numAsString: this.removeFormatting(formattedValue),\n      mounted: false,\n    };\n\n    this.selectionBeforeInput = {\n      selectionStart: 0,\n      selectionEnd: 0,\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n  }\n\n  if ( superclass ) NumberFormat.__proto__ = superclass;\n  NumberFormat.prototype = Object.create( superclass && superclass.prototype );\n  NumberFormat.prototype.constructor = NumberFormat;\n\n  NumberFormat.prototype.componentDidMount = function componentDidMount () {\n    // set mounted state\n    // eslint-disable-next-line react/no-did-mount-set-state\n    this.setState({\n      mounted: true,\n    });\n  };\n\n  NumberFormat.prototype.componentDidUpdate = function componentDidUpdate (prevProps        ) {\n    this.updateValueIfRequired(prevProps);\n  };\n\n  NumberFormat.prototype.componentWillUnmount = function componentWillUnmount () {\n    clearTimeout(this.focusTimeout);\n    clearTimeout(this.caretPositionTimeout);\n  };\n\n  NumberFormat.prototype.updateValueIfRequired = function updateValueIfRequired (prevProps        ) {\n    var ref = this;\n    var props = ref.props;\n    var state = ref.state;\n    var focusedElm = ref.focusedElm;\n    var stateValue = state.value;\n    var lastNumStr = state.numAsString; if ( lastNumStr === void 0 ) lastNumStr = '';\n\n    // If only state changed no need to do any thing\n    if (prevProps !== props) {\n      //validate props\n      this.validateProps();\n\n      var lastValueWithNewFormat = this.formatNumString(lastNumStr);\n\n      var formattedValue = isNil(props.value) ? lastValueWithNewFormat : this.formatValueProp();\n      var numAsString = this.removeFormatting(formattedValue);\n\n      var floatValue = parseFloat(numAsString);\n      var lastFloatValue = parseFloat(lastNumStr);\n\n      if (\n        //while typing set state only when float value changes\n        ((!isNaN(floatValue) || !isNaN(lastFloatValue)) && floatValue !== lastFloatValue) ||\n        //can also set state when float value is same and the format props changes\n        lastValueWithNewFormat !== stateValue ||\n        //set state always when not in focus and formatted value is changed\n        (focusedElm === null && formattedValue !== stateValue)\n      ) {\n        this.updateValue({\n          formattedValue: formattedValue,\n          numAsString: numAsString,\n          input: focusedElm,\n          source: 'prop',\n          event: null,\n        });\n      }\n    }\n  };\n\n  /** Misc methods **/\n  NumberFormat.prototype.getFloatString = function getFloatString (num) {\n    if ( num === void 0 ) num         = '';\n\n    var ref = this.props;\n    var decimalScale = ref.decimalScale;\n    var ref$1 = this.getSeparators();\n    var decimalSeparator = ref$1.decimalSeparator;\n    var numRegex = this.getNumberRegex(true);\n\n    //remove negation for regex check\n    var hasNegation = num[0] === '-';\n    if (hasNegation) { num = num.replace('-', ''); }\n\n    //if decimal scale is zero remove decimal and number after decimalSeparator\n    if (decimalSeparator && decimalScale === 0) {\n      num = num.split(decimalSeparator)[0];\n    }\n\n    num = (num.match(numRegex) || []).join('').replace(decimalSeparator, '.');\n\n    //remove extra decimals\n    var firstDecimalIndex = num.indexOf('.');\n\n    if (firstDecimalIndex !== -1) {\n      num = (num.substring(0, firstDecimalIndex)) + \".\" + (num\n        .substring(firstDecimalIndex + 1, num.length)\n        .replace(new RegExp(escapeRegExp(decimalSeparator), 'g'), ''));\n    }\n\n    //add negation back\n    if (hasNegation) { num = '-' + num; }\n\n    return num;\n  };\n\n  //returned regex assumes decimalSeparator is as per prop\n  NumberFormat.prototype.getNumberRegex = function getNumberRegex (g         , ignoreDecimalSeparator          ) {\n    var ref = this.props;\n    var format = ref.format;\n    var decimalScale = ref.decimalScale;\n    var customNumerals = ref.customNumerals;\n    var ref$1 = this.getSeparators();\n    var decimalSeparator = ref$1.decimalSeparator;\n    return new RegExp(\n      '[0-9' +\n        (customNumerals ? customNumerals.join('') : '') +\n        ']' +\n        (decimalSeparator && decimalScale !== 0 && !ignoreDecimalSeparator && !format\n          ? '|' + escapeRegExp(decimalSeparator)\n          : ''),\n      g ? 'g' : undefined\n    );\n  };\n\n  NumberFormat.prototype.getSeparators = function getSeparators () {\n    var ref = this.props;\n    var decimalSeparator = ref.decimalSeparator;\n    var ref$1 = this.props;\n    var thousandSeparator = ref$1.thousandSeparator;\n    var allowedDecimalSeparators = ref$1.allowedDecimalSeparators;\n\n    if (thousandSeparator === true) {\n      thousandSeparator = ',';\n    }\n    if (!allowedDecimalSeparators) {\n      allowedDecimalSeparators = [decimalSeparator, '.'];\n    }\n\n    return {\n      decimalSeparator: decimalSeparator,\n      thousandSeparator: thousandSeparator,\n      allowedDecimalSeparators: allowedDecimalSeparators,\n    };\n  };\n\n  NumberFormat.prototype.getMaskAtIndex = function getMaskAtIndex (index        ) {\n    var ref = this.props;\n    var mask = ref.mask; if ( mask === void 0 ) mask = ' ';\n    if (typeof mask === 'string') {\n      return mask;\n    }\n\n    return mask[index] || ' ';\n  };\n\n  NumberFormat.prototype.getValueObject = function getValueObject (formattedValue        , numAsString        ) {\n    var floatValue = parseFloat(numAsString);\n\n    return {\n      formattedValue: formattedValue,\n      value: numAsString,\n      floatValue: isNaN(floatValue) ? undefined : floatValue,\n    };\n  };\n\n  NumberFormat.prototype.validateProps = function validateProps () {\n    var ref = this.props;\n    var mask = ref.mask;\n\n    //validate decimalSeparator and thousandSeparator\n    var ref$1 = this.getSeparators();\n    var decimalSeparator = ref$1.decimalSeparator;\n    var thousandSeparator = ref$1.thousandSeparator;\n\n    if (decimalSeparator === thousandSeparator) {\n      throw new Error((\"\\n          Decimal separator can't be same as thousand separator.\\n          thousandSeparator: \" + thousandSeparator + \" (thousandSeparator = {true} is same as thousandSeparator = \\\",\\\")\\n          decimalSeparator: \" + decimalSeparator + \" (default value for decimalSeparator is .)\\n       \"));\n    }\n\n    //validate mask\n    if (mask) {\n      var maskAsStr = mask === 'string' ? mask : mask.toString();\n      if (maskAsStr.match(/\\d/g)) {\n        throw new Error((\"\\n          Mask \" + mask + \" should not contain numeric character;\\n        \"));\n      }\n    }\n  };\n  /** Misc methods end **/\n\n  /** caret specific methods **/\n  NumberFormat.prototype.setPatchedCaretPosition = function setPatchedCaretPosition (el                  , caretPos        , currentValue        ) {\n    /* setting caret position within timeout of 0ms is required for mobile chrome,\n    otherwise browser resets the caret position after we set it\n    We are also setting it without timeout so that in normal browser we don't see the flickering */\n    setCaretPosition(el, caretPos);\n    this.caretPositionTimeout = setTimeout(function () {\n      if (el.value === currentValue) { setCaretPosition(el, caretPos); }\n    }, 0);\n  };\n\n  /* This keeps the caret within typing area so people can't type in between prefix or suffix */\n  NumberFormat.prototype.correctCaretPosition = function correctCaretPosition (value        , caretPos        , direction         ) {\n    var ref = this.props;\n    var prefix = ref.prefix;\n    var suffix = ref.suffix;\n    var format = ref.format;\n\n    //if value is empty return 0\n    if (value === '') { return 0; }\n\n    //caret position should be between 0 and value length\n    caretPos = clamp(caretPos, 0, value.length);\n\n    //in case of format as number limit between prefix and suffix\n    if (!format) {\n      var hasNegation = value[0] === '-';\n      return clamp(caretPos, prefix.length + (hasNegation ? 1 : 0), value.length - suffix.length);\n    }\n\n    //in case if custom format method don't do anything\n    if (typeof format === 'function') { return caretPos; }\n\n    /* in case format is string find the closest # position from the caret position */\n\n    //in case the caretPos have input value on it don't do anything\n    if (format[caretPos] === '#' && charIsNumber(value[caretPos])) {\n      return caretPos;\n    }\n\n    //if caretPos is just after input value don't do anything\n    if (format[caretPos - 1] === '#' && charIsNumber(value[caretPos - 1])) {\n      return caretPos;\n    }\n\n    //find the nearest caret position\n    var firstHashPosition = format.indexOf('#');\n    var lastHashPosition = format.lastIndexOf('#');\n\n    //limit the cursor between the first # position and the last # position\n    caretPos = clamp(caretPos, firstHashPosition, lastHashPosition + 1);\n\n    var nextPos = format.substring(caretPos, format.length).indexOf('#');\n    var caretLeftBound = caretPos;\n    var caretRightBound = caretPos + (nextPos === -1 ? 0 : nextPos);\n\n    //get the position where the last number is present\n    while (\n      caretLeftBound > firstHashPosition &&\n      (format[caretLeftBound] !== '#' || !charIsNumber(value[caretLeftBound]))\n    ) {\n      caretLeftBound -= 1;\n    }\n\n    var goToLeft =\n      !charIsNumber(value[caretRightBound]) ||\n      (direction === 'left' && caretPos !== firstHashPosition) ||\n      caretPos - caretLeftBound < caretRightBound - caretPos;\n\n    if (goToLeft) {\n      //check if number should be taken after the bound or after it\n      //if number preceding a valid number keep it after\n      return charIsNumber(value[caretLeftBound]) ? caretLeftBound + 1 : caretLeftBound;\n    }\n\n    return caretRightBound;\n  };\n\n  NumberFormat.prototype.getCaretPosition = function getCaretPosition (inputValue        , formattedValue        , caretPos        ) {\n    var ref = this.props;\n    var format = ref.format;\n    var stateValue = this.state.value;\n    var numRegex = this.getNumberRegex(true);\n    var inputNumber = (inputValue.match(numRegex) || []).join('');\n    var formattedNumber = (formattedValue.match(numRegex) || []).join('');\n    var j, i;\n\n    j = 0;\n\n    for (i = 0; i < caretPos; i++) {\n      var currentInputChar = inputValue[i] || '';\n      var currentFormatChar = formattedValue[j] || '';\n      //no need to increase new cursor position if formatted value does not have those characters\n      //case inputValue = 1a23 and formattedValue =  123\n      if (!currentInputChar.match(numRegex) && currentInputChar !== currentFormatChar) {\n        continue;\n      }\n\n      //When we are striping out leading zeros maintain the new cursor position\n      //Case inputValue = 00023 and formattedValue = 23;\n      if (\n        currentInputChar === '0' &&\n        currentFormatChar.match(numRegex) &&\n        currentFormatChar !== '0' &&\n        inputNumber.length !== formattedNumber.length\n      ) {\n        continue;\n      }\n\n      //we are not using currentFormatChar because j can change here\n      while (currentInputChar !== formattedValue[j] && j < formattedValue.length) {\n        j++;\n      }\n      j++;\n    }\n\n    if (typeof format === 'string' && !stateValue) {\n      //set it to the maximum value so it goes after the last number\n      j = formattedValue.length;\n    }\n\n    //correct caret position if its outside of editable area\n    j = this.correctCaretPosition(formattedValue, j);\n\n    return j;\n  };\n  /** caret specific methods ends **/\n\n  /** methods to remove formattting **/\n  NumberFormat.prototype.removePrefixAndSuffix = function removePrefixAndSuffix (val        ) {\n    var ref = this.props;\n    var format = ref.format;\n    var prefix = ref.prefix;\n    var suffix = ref.suffix;\n\n    //remove prefix and suffix\n    if (!format && val) {\n      var isNegative = val[0] === '-';\n\n      //remove negation sign\n      if (isNegative) { val = val.substring(1, val.length); }\n\n      //remove prefix\n      val = prefix && val.indexOf(prefix) === 0 ? val.substring(prefix.length, val.length) : val;\n\n      //remove suffix\n      var suffixLastIndex = val.lastIndexOf(suffix);\n      val =\n        suffix && suffixLastIndex !== -1 && suffixLastIndex === val.length - suffix.length\n          ? val.substring(0, suffixLastIndex)\n          : val;\n\n      //add negation sign back\n      if (isNegative) { val = '-' + val; }\n    }\n\n    return val;\n  };\n\n  NumberFormat.prototype.removePatternFormatting = function removePatternFormatting (val        ) {\n    var ref = this.props;\n    var format = ref.format;\n    var formatArray = format.split('#').filter(function (str) { return str !== ''; });\n    var start = 0;\n    var numStr = '';\n\n    for (var i = 0, ln = formatArray.length; i <= ln; i++) {\n      var part = formatArray[i] || '';\n\n      //if i is the last fragment take the index of end of the value\n      //For case like +1 (911) 911 91 91 having pattern +1 (###) ### ## ##\n      var index = i === ln ? val.length : val.indexOf(part, start);\n\n      /* in any case if we don't find the pattern part in the value assume the val as numeric string\n      This will be also in case if user has started typing, in any other case it will not be -1\n      unless wrong prop value is provided */\n      if (index === -1) {\n        numStr = val;\n        break;\n      } else {\n        numStr += val.substring(start, index);\n        start = index + part.length;\n      }\n    }\n\n    return (numStr.match(this.getNumberRegex(true)) || []).join('');\n  };\n\n  NumberFormat.prototype.removeFormatting = function removeFormatting (val        ) {\n    var ref = this.props;\n    var format = ref.format;\n    var removeFormatting = ref.removeFormatting;\n    if (!val) { return val; }\n\n    if (!format) {\n      val = this.removePrefixAndSuffix(val);\n      val = this.getFloatString(val);\n    } else if (typeof format === 'string') {\n      val = this.removePatternFormatting(val);\n    } else if (typeof removeFormatting === 'function') {\n      //condition need to be handled if format method is provide,\n      val = removeFormatting(val);\n    } else {\n      val = (val.match(this.getNumberRegex(true)) || []).join('');\n    }\n    return val;\n  };\n  /** methods to remove formattting end **/\n\n  /*** format specific methods start ***/\n  /**\n   * Format when # based string is provided\n   * @param  {string} numStr Numeric String\n   * @return {string}        formatted Value\n   */\n  NumberFormat.prototype.formatWithPattern = function formatWithPattern (numStr        ) {\n    var ref = this.props;\n    var format = ref.format;\n    var hashCount = 0;\n    var formattedNumberAry = format.split('');\n    for (var i = 0, ln = format.length; i < ln; i++) {\n      if (format[i] === '#') {\n        formattedNumberAry[i] = numStr[hashCount] || this.getMaskAtIndex(hashCount);\n        hashCount += 1;\n      }\n    }\n    return formattedNumberAry.join('');\n  };\n  /**\n   * @param  {string} numStr Numeric string/floatString] It always have decimalSeparator as .\n   * @return {string} formatted Value\n   */\n  NumberFormat.prototype.formatAsNumber = function formatAsNumber (numStr        ) {\n    var ref = this.props;\n    var decimalScale = ref.decimalScale;\n    var fixedDecimalScale = ref.fixedDecimalScale;\n    var prefix = ref.prefix;\n    var suffix = ref.suffix;\n    var allowNegative = ref.allowNegative;\n    var thousandsGroupStyle = ref.thousandsGroupStyle;\n    var ref$1 = this.getSeparators();\n    var thousandSeparator = ref$1.thousandSeparator;\n    var decimalSeparator = ref$1.decimalSeparator;\n\n    var hasDecimalSeparator = numStr.indexOf('.') !== -1 || (decimalScale && fixedDecimalScale);\n    var ref$2 = splitDecimal(numStr, allowNegative);\n    var beforeDecimal = ref$2.beforeDecimal;\n    var afterDecimal = ref$2.afterDecimal;\n    var addNegation = ref$2.addNegation; // eslint-disable-line prefer-const\n\n    //apply decimal precision if its defined\n    if (decimalScale !== undefined) {\n      afterDecimal = limitToScale(afterDecimal, decimalScale, fixedDecimalScale);\n    }\n\n    if (thousandSeparator) {\n      beforeDecimal = applyThousandSeparator(beforeDecimal, thousandSeparator, thousandsGroupStyle);\n    }\n\n    //add prefix and suffix\n    if (prefix) { beforeDecimal = prefix + beforeDecimal; }\n    if (suffix) { afterDecimal = afterDecimal + suffix; }\n\n    //restore negation sign\n    if (addNegation) { beforeDecimal = '-' + beforeDecimal; }\n\n    numStr = beforeDecimal + ((hasDecimalSeparator && decimalSeparator) || '') + afterDecimal;\n\n    return numStr;\n  };\n\n  NumberFormat.prototype.formatNumString = function formatNumString (numStr) {\n    if ( numStr === void 0 ) numStr         = '';\n\n    var ref = this.props;\n    var format = ref.format;\n    var allowEmptyFormatting = ref.allowEmptyFormatting;\n    var customNumerals = ref.customNumerals;\n    var formattedValue = numStr;\n\n    if (customNumerals && customNumerals.length === 10) {\n      var customNumeralRegex = new RegExp('[' + customNumerals.join('') + ']', 'g');\n      formattedValue = numStr.replace(customNumeralRegex, function (digit) { return customNumerals.indexOf(digit).toString(); }\n      );\n    }\n\n    if (numStr === '' && !allowEmptyFormatting) {\n      formattedValue = '';\n    } else if (numStr === '-' && !format) {\n      formattedValue = '-';\n    } else if (typeof format === 'string') {\n      formattedValue = this.formatWithPattern(formattedValue);\n    } else if (typeof format === 'function') {\n      formattedValue = format(formattedValue);\n    } else {\n      formattedValue = this.formatAsNumber(formattedValue);\n    }\n\n    return formattedValue;\n  };\n\n  NumberFormat.prototype.formatValueProp = function formatValueProp (defaultValue                 ) {\n    var ref = this.props;\n    var format = ref.format;\n    var decimalScale = ref.decimalScale;\n    var fixedDecimalScale = ref.fixedDecimalScale;\n    var allowEmptyFormatting = ref.allowEmptyFormatting;\n    var ref$1 = this.props;\n    var value = ref$1.value;\n    var isNumericString = ref$1.isNumericString;\n\n    // if value is undefined or null, use defaultValue instead\n    value = isNil(value) ? defaultValue : value;\n\n    var isNonNumericFalsy = !value && value !== 0;\n\n    if (isNonNumericFalsy && allowEmptyFormatting) {\n      value = '';\n    }\n\n    // if value is not defined return empty string\n    if (isNonNumericFalsy && !allowEmptyFormatting) { return ''; }\n\n    if (typeof value === 'number') {\n      value = toNumericString(value);\n      isNumericString = true;\n    }\n\n    //change infinity value to empty string\n    if (value === 'Infinity' && isNumericString) {\n      value = '';\n    }\n\n    //round the number based on decimalScale\n    //format only if non formatted value is provided\n    if (isNumericString && !format && typeof decimalScale === 'number') {\n      value = roundToPrecision(value, decimalScale, fixedDecimalScale);\n    }\n\n    var formattedValue = isNumericString ? this.formatNumString(value) : this.formatInput(value);\n\n    return formattedValue;\n  };\n\n  NumberFormat.prototype.formatNegation = function formatNegation (value) {\n    if ( value === void 0 ) value         = '';\n\n    var ref = this.props;\n    var allowNegative = ref.allowNegative;\n    var negationRegex = new RegExp('(-)');\n    var doubleNegationRegex = new RegExp('(-)(.)*(-)');\n\n    // Check number has '-' value\n    var hasNegation = negationRegex.test(value);\n\n    // Check number has 2 or more '-' values\n    var removeNegation = doubleNegationRegex.test(value);\n\n    //remove negation\n    value = value.replace(/-/g, '');\n\n    if (hasNegation && !removeNegation && allowNegative) {\n      value = '-' + value;\n    }\n\n    return value;\n  };\n\n  NumberFormat.prototype.formatInput = function formatInput (value) {\n    if ( value === void 0 ) value         = '';\n\n    var ref = this.props;\n    var format = ref.format;\n\n    //format negation only if we are formatting as number\n    if (!format) {\n      value = this.removePrefixAndSuffix(value);\n      value = this.formatNegation(value);\n    }\n\n    //remove formatting from number\n    value = this.removeFormatting(value);\n\n    return this.formatNumString(value);\n  };\n\n  /*** format specific methods end ***/\n  NumberFormat.prototype.isCharacterAFormat = function isCharacterAFormat (caretPos        , value        ) {\n    var ref = this.props;\n    var format = ref.format;\n    var prefix = ref.prefix;\n    var suffix = ref.suffix;\n    var decimalScale = ref.decimalScale;\n    var fixedDecimalScale = ref.fixedDecimalScale;\n    var ref$1 = this.getSeparators();\n    var decimalSeparator = ref$1.decimalSeparator;\n\n    //check within format pattern\n    if (typeof format === 'string' && format[caretPos] !== '#') { return true; }\n\n    //check in number format\n    if (\n      !format &&\n      (caretPos < prefix.length ||\n        caretPos >= value.length - suffix.length ||\n        (decimalScale && fixedDecimalScale && value[caretPos] === decimalSeparator))\n    ) {\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * This will check if any formatting got removed by the delete or backspace and reset the value\n   * It will also work as fallback if android chome keyDown handler does not work\n   **/\n  NumberFormat.prototype.correctInputValue = function correctInputValue (caretPos        , lastValue        , value        ) {\n    var this$1 = this;\n\n    var ref = this.props;\n    var format = ref.format;\n    var allowNegative = ref.allowNegative;\n    var prefix = ref.prefix;\n    var suffix = ref.suffix;\n    var decimalScale = ref.decimalScale;\n    var ref$1 = this.getSeparators();\n    var allowedDecimalSeparators = ref$1.allowedDecimalSeparators;\n    var decimalSeparator = ref$1.decimalSeparator;\n    var lastNumStr = this.state.numAsString || '';\n    var ref$2 = this.selectionBeforeInput;\n    var selectionStart = ref$2.selectionStart;\n    var selectionEnd = ref$2.selectionEnd;\n    var ref$3 = findChangedIndex(lastValue, value);\n    var start = ref$3.start;\n    var end = ref$3.end;\n\n    /** Check for any allowed decimal separator is added in the numeric format and replace it with decimal separator */\n    if (\n      !format &&\n      start === end &&\n      allowedDecimalSeparators.indexOf(value[selectionStart]) !== -1\n    ) {\n      var separator = decimalScale === 0 ? '' : decimalSeparator;\n      return (\n        value.substr(0, selectionStart) + separator + value.substr(selectionStart + 1, value.length)\n      );\n    }\n\n    var leftBound = !!format ? 0 : prefix.length;\n    var rightBound = lastValue.length - (!!format ? 0 : suffix.length);\n\n    if (\n      // don't do anything if something got added\n      value.length > lastValue.length ||\n      // or if the new value is an empty string\n      !value.length ||\n      // or if nothing has changed, in which case start will be same as end\n      start === end ||\n      // or in case if whole input is selected and new value is typed\n      (selectionStart === 0 && selectionEnd === lastValue.length) ||\n      // or in case if the whole content is replaced by browser, example (autocomplete)\n      (start === 0 && end === lastValue.length) ||\n      // or if charcters between prefix and suffix is selected.\n      // For numeric inputs we apply the format so, prefix and suffix can be ignored\n      (selectionStart === leftBound && selectionEnd === rightBound)\n    ) {\n      return value;\n    }\n\n    // check whether the deleted portion has a character that is part of a format\n    var deletedValues = lastValue.substr(start, end - start);\n    var formatGotDeleted = !![].concat( deletedValues ).find(function (deletedVal, idx) { return this$1.isCharacterAFormat(idx + start, lastValue); }\n    );\n\n    // if it has, only remove characters that are not part of the format\n    if (formatGotDeleted) {\n      var deletedValuePortion = lastValue.substr(start);\n      var recordIndexOfFormatCharacters = {};\n      var resolvedPortion = [];\n      [].concat( deletedValuePortion ).forEach(function (currentPortion, idx) {\n        if (this$1.isCharacterAFormat(idx + start, lastValue)) {\n          recordIndexOfFormatCharacters[idx] = currentPortion;\n        } else if (idx > deletedValues.length - 1) {\n          resolvedPortion.push(currentPortion);\n        }\n      });\n\n      Object.keys(recordIndexOfFormatCharacters).forEach(function (idx) {\n        if (resolvedPortion.length > idx) {\n          resolvedPortion.splice(idx, 0, recordIndexOfFormatCharacters[idx]);\n        } else {\n          resolvedPortion.push(recordIndexOfFormatCharacters[idx]);\n        }\n      });\n\n      value = lastValue.substr(0, start) + resolvedPortion.join('');\n    }\n\n    //for numbers check if beforeDecimal got deleted and there is nothing after decimal,\n    //clear all numbers in such case while keeping the - sign\n    if (!format) {\n      var numericString = this.removeFormatting(value);\n      var ref$4 = splitDecimal(\n        numericString,\n        allowNegative\n      );\n      var beforeDecimal = ref$4.beforeDecimal;\n      var afterDecimal = ref$4.afterDecimal;\n      var addNegation = ref$4.addNegation; // eslint-disable-line prefer-const\n\n      //clear only if something got deleted\n      var isBeforeDecimalPoint = caretPos < value.indexOf(decimalSeparator) + 1;\n      if (\n        numericString.length < lastNumStr.length &&\n        isBeforeDecimalPoint &&\n        beforeDecimal === '' &&\n        !parseFloat(afterDecimal)\n      ) {\n        return addNegation ? '-' : '';\n      }\n    }\n\n    return value;\n  };\n\n  /** Update value and caret position */\n  NumberFormat.prototype.updateValue = function updateValue (params   \n                           \n                        \n                       \n                            \n                               \n                   \n                     \n                              \n   ) {\n    var formattedValue = params.formattedValue;\n    var input = params.input;\n    var setCaretPosition = params.setCaretPosition; if ( setCaretPosition === void 0 ) setCaretPosition = true;\n    var source = params.source;\n    var event = params.event;\n    var numAsString = params.numAsString;\n    var caretPos = params.caretPos;\n    var ref = this.props;\n    var onValueChange = ref.onValueChange;\n    var ref$1 = this.state;\n    var lastValue = ref$1.value;\n\n    if (input) {\n      //calculate caret position if not defined\n      if (caretPos === undefined && setCaretPosition) {\n        var inputValue = params.inputValue || input.value;\n\n        var currentCaretPosition = getCurrentCaretPosition(input);\n\n        /**\n         * set the value imperatively, this is required for IE fix\n         * This is also required as if new caret position is beyond the previous value.\n         * Caret position will not be set correctly\n         */\n        input.value = formattedValue;\n\n        //get the caret position\n        caretPos = this.getCaretPosition(inputValue, formattedValue, currentCaretPosition);\n      }\n\n      /**\n       * set the value imperatively, as we set the caret position as well imperatively.\n       * This is to keep value and caret position in sync\n       */\n      input.value = formattedValue;\n\n      //set caret position, and value imperatively when element is provided\n      if (setCaretPosition) {\n        //set caret position\n        this.setPatchedCaretPosition(input, caretPos, formattedValue);\n      }\n    }\n\n    //calculate numeric string if not passed\n    if (numAsString === undefined) {\n      numAsString = this.removeFormatting(formattedValue);\n    }\n\n    //update state if value is changed\n    if (formattedValue !== lastValue) {\n      this.setState({ value: formattedValue, numAsString: numAsString });\n\n      // trigger onValueChange synchronously, so parent is updated along with the number format. Fix for #277, #287\n      onValueChange(this.getValueObject(formattedValue, numAsString), { event: event, source: source });\n    }\n  };\n\n  NumberFormat.prototype.onChange = function onChange (e                     ) {\n    var el = e.target;\n    var inputValue = el.value;\n    var ref = this;\n    var state = ref.state;\n    var props = ref.props;\n    var isAllowed = props.isAllowed;\n    var lastValue = state.value || '';\n\n    var currentCaretPosition = getCurrentCaretPosition(el);\n\n    inputValue = this.correctInputValue(currentCaretPosition, lastValue, inputValue);\n\n    var formattedValue = this.formatInput(inputValue) || '';\n    var numAsString = this.removeFormatting(formattedValue);\n\n    var valueObj = this.getValueObject(formattedValue, numAsString);\n    var isChangeAllowed = isAllowed(valueObj);\n\n    if (!isChangeAllowed) {\n      formattedValue = lastValue;\n    }\n\n    this.updateValue({\n      formattedValue: formattedValue,\n      numAsString: numAsString,\n      inputValue: inputValue,\n      input: el,\n      event: e,\n      source: 'event',\n    });\n\n    if (isChangeAllowed) {\n      props.onChange(e);\n    }\n  };\n\n  NumberFormat.prototype.onBlur = function onBlur (e                     ) {\n    var ref = this;\n    var props = ref.props;\n    var state = ref.state;\n    var format = props.format;\n    var onBlur = props.onBlur;\n    var allowLeadingZeros = props.allowLeadingZeros;\n    var numAsString = state.numAsString;\n    var lastValue = state.value;\n    this.focusedElm = null;\n\n    clearTimeout(this.focusTimeout);\n    clearTimeout(this.caretPositionTimeout);\n\n    if (!format) {\n      // if the numAsString is not a valid number reset it to empty\n      if (isNaN(parseFloat(numAsString))) {\n        numAsString = '';\n      }\n\n      if (!allowLeadingZeros) {\n        numAsString = fixLeadingZero(numAsString);\n      }\n\n      var formattedValue = this.formatNumString(numAsString);\n\n      //change the state\n      if (formattedValue !== lastValue) {\n        // the event needs to be persisted because its properties can be accessed in an asynchronous way\n        this.updateValue({\n          formattedValue: formattedValue,\n          numAsString: numAsString,\n          input: e.target,\n          setCaretPosition: false,\n          event: e,\n          source: 'event',\n        });\n        onBlur(e);\n        return;\n      }\n    }\n    onBlur(e);\n  };\n\n  NumberFormat.prototype.onKeyDown = function onKeyDown (e                             ) {\n    var el = e.target;\n    var key = e.key;\n    var selectionStart = el.selectionStart;\n    var selectionEnd = el.selectionEnd;\n    var value = el.value; if ( value === void 0 ) value = '';\n    var expectedCaretPosition;\n    var ref = this.props;\n    var decimalScale = ref.decimalScale;\n    var fixedDecimalScale = ref.fixedDecimalScale;\n    var prefix = ref.prefix;\n    var suffix = ref.suffix;\n    var format = ref.format;\n    var onKeyDown = ref.onKeyDown;\n    var ignoreDecimalSeparator = decimalScale !== undefined && fixedDecimalScale;\n    var numRegex = this.getNumberRegex(false, ignoreDecimalSeparator);\n    var negativeRegex = new RegExp('-');\n    var isPatternFormat = typeof format === 'string';\n\n    this.selectionBeforeInput = {\n      selectionStart: selectionStart,\n      selectionEnd: selectionEnd,\n    };\n\n    //Handle backspace and delete against non numerical/decimal characters or arrow keys\n    if (key === 'ArrowLeft' || key === 'Backspace') {\n      expectedCaretPosition = selectionStart - 1;\n    } else if (key === 'ArrowRight') {\n      expectedCaretPosition = selectionStart + 1;\n    } else if (key === 'Delete') {\n      expectedCaretPosition = selectionStart;\n    }\n\n    //if expectedCaretPosition is not set it means we don't want to Handle keyDown\n    //also if multiple characters are selected don't handle\n    if (expectedCaretPosition === undefined || selectionStart !== selectionEnd) {\n      onKeyDown(e);\n      return;\n    }\n\n    var newCaretPosition = expectedCaretPosition;\n    var leftBound = isPatternFormat ? format.indexOf('#') : prefix.length;\n    var rightBound = isPatternFormat ? format.lastIndexOf('#') + 1 : value.length - suffix.length;\n\n    if (key === 'ArrowLeft' || key === 'ArrowRight') {\n      var direction = key === 'ArrowLeft' ? 'left' : 'right';\n      newCaretPosition = this.correctCaretPosition(value, expectedCaretPosition, direction);\n    } else if (\n      key === 'Delete' &&\n      !numRegex.test(value[expectedCaretPosition]) &&\n      !negativeRegex.test(value[expectedCaretPosition])\n    ) {\n      while (!numRegex.test(value[newCaretPosition]) && newCaretPosition < rightBound) {\n        newCaretPosition++;\n      }\n    } else if (key === 'Backspace' && !numRegex.test(value[expectedCaretPosition])) {\n      /* NOTE: This is special case when backspace is pressed on a\n      negative value while the cursor position is after prefix. We can't handle it on onChange because\n      we will not have any information of keyPress\n      */\n      if (selectionStart <= leftBound + 1 && value[0] === '-' && typeof format === 'undefined') {\n        var newValue = value.substring(1);\n        this.updateValue({\n          formattedValue: newValue,\n          caretPos: newCaretPosition,\n          input: el,\n          event: e,\n          source: 'event',\n        });\n      } else if (!negativeRegex.test(value[expectedCaretPosition])) {\n        while (!numRegex.test(value[newCaretPosition - 1]) && newCaretPosition > leftBound) {\n          newCaretPosition--;\n        }\n        newCaretPosition = this.correctCaretPosition(value, newCaretPosition, 'left');\n      }\n    }\n\n    if (\n      newCaretPosition !== expectedCaretPosition ||\n      expectedCaretPosition < leftBound ||\n      expectedCaretPosition > rightBound\n    ) {\n      e.preventDefault();\n      this.setPatchedCaretPosition(el, newCaretPosition, value);\n    }\n\n    /* NOTE: this is just required for unit test as we need to get the newCaretPosition,\n            Remove this when you find different solution */\n    if (e.isUnitTestRun) {\n      this.setPatchedCaretPosition(el, newCaretPosition, value);\n    }\n\n    onKeyDown(e);\n  };\n\n  /** required to handle the caret position when click anywhere within the input **/\n  NumberFormat.prototype.onMouseUp = function onMouseUp (e                          ) {\n    var el = e.target;\n\n    /**\n     * NOTE: we have to give default value for value as in case when custom input is provided\n     * value can come as undefined when nothing is provided on value prop.\n     */\n    var selectionStart = el.selectionStart;\n    var selectionEnd = el.selectionEnd;\n    var value = el.value; if ( value === void 0 ) value = '';\n\n    if (selectionStart === selectionEnd) {\n      var caretPosition = this.correctCaretPosition(value, selectionStart);\n      if (caretPosition !== selectionStart) {\n        this.setPatchedCaretPosition(el, caretPosition, value);\n      }\n    }\n\n    this.props.onMouseUp(e);\n  };\n\n  NumberFormat.prototype.onFocus = function onFocus (e                     ) {\n    var this$1 = this;\n\n    // Workaround Chrome and Safari bug https://bugs.chromium.org/p/chromium/issues/detail?id=779328\n    // (onFocus event target selectionStart is always 0 before setTimeout)\n    e.persist();\n\n    this.focusedElm = e.target;\n    this.focusTimeout = setTimeout(function () {\n      var el = e.target;\n      var selectionStart = el.selectionStart;\n      var selectionEnd = el.selectionEnd;\n      var value = el.value; if ( value === void 0 ) value = '';\n\n      var caretPosition = this$1.correctCaretPosition(value, selectionStart);\n\n      //setPatchedCaretPosition only when everything is not selected on focus (while tabbing into the field)\n      if (\n        caretPosition !== selectionStart &&\n        !(selectionStart === 0 && selectionEnd === value.length)\n      ) {\n        this$1.setPatchedCaretPosition(el, caretPosition, value);\n      }\n\n      this$1.props.onFocus(e);\n    }, 0);\n  };\n\n  NumberFormat.prototype.render = function render () {\n    var ref = this.props;\n    var type = ref.type;\n    var displayType = ref.displayType;\n    var customInput = ref.customInput;\n    var renderText = ref.renderText;\n    var getInputRef = ref.getInputRef;\n    var format = ref.format;\n    var thousandSeparator = ref.thousandSeparator;\n    var decimalSeparator = ref.decimalSeparator;\n    var allowedDecimalSeparators = ref.allowedDecimalSeparators;\n    var thousandsGroupStyle = ref.thousandsGroupStyle;\n    var decimalScale = ref.decimalScale;\n    var fixedDecimalScale = ref.fixedDecimalScale;\n    var prefix = ref.prefix;\n    var suffix = ref.suffix;\n    var removeFormatting = ref.removeFormatting;\n    var mask = ref.mask;\n    var defaultValue = ref.defaultValue;\n    var isNumericString = ref.isNumericString;\n    var allowNegative = ref.allowNegative;\n    var allowEmptyFormatting = ref.allowEmptyFormatting;\n    var allowLeadingZeros = ref.allowLeadingZeros;\n    var onValueChange = ref.onValueChange;\n    var isAllowed = ref.isAllowed;\n    var customNumerals = ref.customNumerals;\n    var onChange = ref.onChange;\n    var onKeyDown = ref.onKeyDown;\n    var onMouseUp = ref.onMouseUp;\n    var onFocus = ref.onFocus;\n    var onBlur = ref.onBlur;\n    var propValue = ref.value;\n    var rest = objectWithoutProperties( ref, [\"type\", \"displayType\", \"customInput\", \"renderText\", \"getInputRef\", \"format\", \"thousandSeparator\", \"decimalSeparator\", \"allowedDecimalSeparators\", \"thousandsGroupStyle\", \"decimalScale\", \"fixedDecimalScale\", \"prefix\", \"suffix\", \"removeFormatting\", \"mask\", \"defaultValue\", \"isNumericString\", \"allowNegative\", \"allowEmptyFormatting\", \"allowLeadingZeros\", \"onValueChange\", \"isAllowed\", \"customNumerals\", \"onChange\", \"onKeyDown\", \"onMouseUp\", \"onFocus\", \"onBlur\", \"value\"] );\n    var otherProps = rest;\n    var ref$1 = this.state;\n    var value = ref$1.value;\n    var mounted = ref$1.mounted;\n\n    // add input mode on element based on format prop and device once the component is mounted\n    var inputMode = mounted && addInputMode(format) ? 'numeric' : undefined;\n\n    var inputProps = Object.assign({ inputMode: inputMode }, otherProps, {\n      type: type,\n      value: value,\n      onChange: this.onChange,\n      onKeyDown: this.onKeyDown,\n      onMouseUp: this.onMouseUp,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n    });\n\n    if (displayType === 'text') {\n      return renderText ? (\n        renderText(value, otherProps) || null\n      ) : (\n        React.createElement( 'span', Object.assign({}, otherProps, { ref: getInputRef }),\n          value\n        )\n      );\n    } else if (customInput) {\n      var CustomInput = customInput;\n      return React.createElement( CustomInput, Object.assign({}, inputProps, { ref: getInputRef }));\n    }\n\n    return React.createElement( 'input', Object.assign({}, inputProps, { ref: getInputRef }));\n  };\n\n  return NumberFormat;\n}(React.Component));\n\nNumberFormat.defaultProps = defaultProps;\n\nexport default NumberFormat;\n","export function supportBigInt() {\n  return typeof BigInt === 'function';\n}","import { supportBigInt } from './supportUtil';\n/**\n * Format string number to readable number\n */\n\nexport function trimNumber(numStr) {\n  var str = numStr.trim();\n  var negative = str.startsWith('-');\n\n  if (negative) {\n    str = str.slice(1);\n  }\n\n  str = str // Remove decimal 0. `1.000` => `1.`, `1.100` => `1.1`\n  .replace(/(\\.\\d*[^0])0*$/, '$1') // Remove useless decimal. `1.` => `1`\n  .replace(/\\.0*$/, '') // Remove integer 0. `0001` => `1`, 000.1' => `.1`\n  .replace(/^0+/, '');\n\n  if (str.startsWith('.')) {\n    str = \"0\".concat(str);\n  }\n\n  var trimStr = str || '0';\n  var splitNumber = trimStr.split('.');\n  var integerStr = splitNumber[0] || '0';\n  var decimalStr = splitNumber[1] || '0';\n\n  if (integerStr === '0' && decimalStr === '0') {\n    negative = false;\n  }\n\n  var negativeStr = negative ? '-' : '';\n  return {\n    negative: negative,\n    negativeStr: negativeStr,\n    trimStr: trimStr,\n    integerStr: integerStr,\n    decimalStr: decimalStr,\n    fullStr: \"\".concat(negativeStr).concat(trimStr)\n  };\n}\nexport function isE(number) {\n  var str = String(number);\n  return !Number.isNaN(Number(str)) && str.includes('e');\n}\n/**\n * [Legacy] Convert 1e-9 to 0.000000001.\n * This may lose some precision if user really want 1e-9.\n */\n\nexport function getNumberPrecision(number) {\n  var numStr = String(number);\n\n  if (isE(number)) {\n    var precision = Number(numStr.slice(numStr.indexOf('e-') + 2));\n    var decimalMatch = numStr.match(/\\.(\\d+)/);\n\n    if (decimalMatch === null || decimalMatch === void 0 ? void 0 : decimalMatch[1]) {\n      precision += decimalMatch[1].length;\n    }\n\n    return precision;\n  }\n\n  return numStr.includes('.') && validateNumber(numStr) ? numStr.length - numStr.indexOf('.') - 1 : 0;\n}\n/**\n * Convert number (includes scientific notation) to -xxx.yyy format\n */\n\nexport function num2str(number) {\n  var numStr = String(number);\n\n  if (isE(number)) {\n    if (number > Number.MAX_SAFE_INTEGER) {\n      return String(supportBigInt() ? BigInt(number).toString() : Number.MAX_SAFE_INTEGER);\n    }\n\n    if (number < Number.MIN_SAFE_INTEGER) {\n      return String(supportBigInt() ? BigInt(number).toString() : Number.MIN_SAFE_INTEGER);\n    }\n\n    numStr = number.toFixed(getNumberPrecision(numStr));\n  }\n\n  return trimNumber(numStr).fullStr;\n}\nexport function validateNumber(num) {\n  if (typeof num === 'number') {\n    return !Number.isNaN(num);\n  } // Empty\n\n\n  if (!num) {\n    return false;\n  }\n\n  return (// Normal type: 11.28\n    /^\\s*-?\\d+(\\.\\d+)?\\s*$/.test(num) || // Pre-number: 1.\n    /^\\s*-?\\d+\\.\\s*$/.test(num) || // Post-number: .1\n    /^\\s*-?\\.\\d+\\s*$/.test(num)\n  );\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\n/* eslint-disable max-classes-per-file */\nimport { getNumberPrecision, isE, num2str, trimNumber, validateNumber } from './numberUtil';\nimport { supportBigInt } from './supportUtil';\n/**\n * We can remove this when IE not support anymore\n */\n\nexport var NumberDecimal = /*#__PURE__*/function () {\n  function NumberDecimal(value) {\n    _classCallCheck(this, NumberDecimal);\n\n    this.origin = '';\n    this.number = void 0;\n    this.empty = void 0;\n\n    if (!value && value !== 0 || !String(value).trim()) {\n      this.empty = true;\n      return;\n    }\n\n    this.origin = String(value);\n    this.number = Number(value);\n  }\n\n  _createClass(NumberDecimal, [{\n    key: \"negate\",\n    value: function negate() {\n      return new NumberDecimal(-this.toNumber());\n    }\n  }, {\n    key: \"add\",\n    value: function add(value) {\n      if (this.isInvalidate()) {\n        return new NumberDecimal(value);\n      }\n\n      var target = Number(value);\n\n      if (Number.isNaN(target)) {\n        return this;\n      }\n\n      var number = this.number + target; // [Legacy] Back to safe integer\n\n      if (number > Number.MAX_SAFE_INTEGER) {\n        return new NumberDecimal(Number.MAX_SAFE_INTEGER);\n      }\n\n      if (number < Number.MIN_SAFE_INTEGER) {\n        return new NumberDecimal(Number.MIN_SAFE_INTEGER);\n      }\n\n      var maxPrecision = Math.max(getNumberPrecision(this.number), getNumberPrecision(target));\n      return new NumberDecimal(number.toFixed(maxPrecision));\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.empty;\n    }\n  }, {\n    key: \"isNaN\",\n    value: function isNaN() {\n      return Number.isNaN(this.number);\n    }\n  }, {\n    key: \"isInvalidate\",\n    value: function isInvalidate() {\n      return this.isEmpty() || this.isNaN();\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(target) {\n      return this.toNumber() === (target === null || target === void 0 ? void 0 : target.toNumber());\n    }\n  }, {\n    key: \"lessEquals\",\n    value: function lessEquals(target) {\n      return this.add(target.negate().toString()).toNumber() <= 0;\n    }\n  }, {\n    key: \"toNumber\",\n    value: function toNumber() {\n      return this.number;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var safe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (!safe) {\n        return this.origin;\n      }\n\n      if (this.isInvalidate()) {\n        return '';\n      }\n\n      return num2str(this.number);\n    }\n  }]);\n\n  return NumberDecimal;\n}();\nexport var BigIntDecimal = /*#__PURE__*/function () {\n  /** BigInt will convert `0009` to `9`. We need record the len of decimal */\n  function BigIntDecimal(value) {\n    _classCallCheck(this, BigIntDecimal);\n\n    this.origin = '';\n    this.negative = void 0;\n    this.integer = void 0;\n    this.decimal = void 0;\n    this.decimalLen = void 0;\n    this.empty = void 0;\n    this.nan = void 0;\n\n    if (!value && value !== 0 || !String(value).trim()) {\n      this.empty = true;\n      return;\n    }\n\n    this.origin = String(value); // Act like Number convert\n\n    if (value === '-') {\n      this.nan = true;\n      return;\n    }\n\n    var mergedValue = value; // We need convert back to Number since it require `toFixed` to handle this\n\n    if (isE(mergedValue)) {\n      mergedValue = Number(mergedValue);\n    }\n\n    mergedValue = typeof mergedValue === 'string' ? mergedValue : num2str(mergedValue);\n\n    if (validateNumber(mergedValue)) {\n      var trimRet = trimNumber(mergedValue);\n      this.negative = trimRet.negative;\n      var numbers = trimRet.trimStr.split('.');\n      this.integer = BigInt(numbers[0]);\n      var decimalStr = numbers[1] || '0';\n      this.decimal = BigInt(decimalStr);\n      this.decimalLen = decimalStr.length;\n    } else {\n      this.nan = true;\n    }\n  }\n\n  _createClass(BigIntDecimal, [{\n    key: \"getMark\",\n    value: function getMark() {\n      return this.negative ? '-' : '';\n    }\n  }, {\n    key: \"getIntegerStr\",\n    value: function getIntegerStr() {\n      return this.integer.toString();\n    }\n  }, {\n    key: \"getDecimalStr\",\n    value: function getDecimalStr() {\n      return this.decimal.toString().padStart(this.decimalLen, '0');\n    }\n    /**\n     * Align BigIntDecimal with same decimal length. e.g. 12.3 + 5 = 1230000\n     * This is used for add function only.\n     */\n\n  }, {\n    key: \"alignDecimal\",\n    value: function alignDecimal(decimalLength) {\n      var str = \"\".concat(this.getMark()).concat(this.getIntegerStr()).concat(this.getDecimalStr().padEnd(decimalLength, '0'));\n      return BigInt(str);\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      var clone = new BigIntDecimal(this.toString());\n      clone.negative = !clone.negative;\n      return clone;\n    }\n  }, {\n    key: \"add\",\n    value: function add(value) {\n      if (this.isInvalidate()) {\n        return new BigIntDecimal(value);\n      }\n\n      var offset = new BigIntDecimal(value);\n\n      if (offset.isInvalidate()) {\n        return this;\n      }\n\n      var maxDecimalLength = Math.max(this.getDecimalStr().length, offset.getDecimalStr().length);\n      var myAlignedDecimal = this.alignDecimal(maxDecimalLength);\n      var offsetAlignedDecimal = offset.alignDecimal(maxDecimalLength);\n      var valueStr = (myAlignedDecimal + offsetAlignedDecimal).toString(); // We need fill string length back to `maxDecimalLength` to avoid parser failed\n\n      var _trimNumber = trimNumber(valueStr),\n          negativeStr = _trimNumber.negativeStr,\n          trimStr = _trimNumber.trimStr;\n\n      var hydrateValueStr = \"\".concat(negativeStr).concat(trimStr.padStart(maxDecimalLength + 1, '0'));\n      return new BigIntDecimal(\"\".concat(hydrateValueStr.slice(0, -maxDecimalLength), \".\").concat(hydrateValueStr.slice(-maxDecimalLength)));\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.empty;\n    }\n  }, {\n    key: \"isNaN\",\n    value: function isNaN() {\n      return this.nan;\n    }\n  }, {\n    key: \"isInvalidate\",\n    value: function isInvalidate() {\n      return this.isEmpty() || this.isNaN();\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(target) {\n      return this.toString() === (target === null || target === void 0 ? void 0 : target.toString());\n    }\n  }, {\n    key: \"lessEquals\",\n    value: function lessEquals(target) {\n      return this.add(target.negate().toString()).toNumber() <= 0;\n    }\n  }, {\n    key: \"toNumber\",\n    value: function toNumber() {\n      if (this.isNaN()) {\n        return NaN;\n      }\n\n      return Number(this.toString());\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var safe = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (!safe) {\n        return this.origin;\n      }\n\n      if (this.isInvalidate()) {\n        return '';\n      }\n\n      return trimNumber(\"\".concat(this.getMark()).concat(this.getIntegerStr(), \".\").concat(this.getDecimalStr())).fullStr;\n    }\n  }]);\n\n  return BigIntDecimal;\n}();\nexport default function getMiniDecimal(value) {\n  // We use BigInt here.\n  // Will fallback to Number if not support.\n  if (supportBigInt()) {\n    return new BigIntDecimal(value);\n  }\n\n  return new NumberDecimal(value);\n}\n/**\n * Align the logic of toFixed to around like 1.5 => 2\n */\n\nexport function toFixed(numStr, separatorStr, precision) {\n  if (numStr === '') {\n    return '';\n  }\n\n  var _trimNumber2 = trimNumber(numStr),\n      negativeStr = _trimNumber2.negativeStr,\n      integerStr = _trimNumber2.integerStr,\n      decimalStr = _trimNumber2.decimalStr;\n\n  var precisionDecimalStr = \"\".concat(separatorStr).concat(decimalStr);\n  var numberWithoutDecimal = \"\".concat(negativeStr).concat(integerStr);\n\n  if (precision >= 0) {\n    // We will get last + 1 number to check if need advanced number\n    var advancedNum = Number(decimalStr[precision]);\n\n    if (advancedNum >= 5) {\n      var advancedDecimal = getMiniDecimal(numStr).add(\"\".concat(negativeStr, \"0.\").concat('0'.repeat(precision)).concat(10 - advancedNum));\n      return toFixed(advancedDecimal.toString(), separatorStr, precision);\n    }\n\n    if (precision === 0) {\n      return numberWithoutDecimal;\n    }\n\n    return \"\".concat(numberWithoutDecimal).concat(separatorStr).concat(decimalStr.padEnd(precision, '0').slice(0, precision));\n  }\n\n  if (precisionDecimalStr === '.0') {\n    return numberWithoutDecimal;\n  }\n\n  return \"\".concat(numberWithoutDecimal).concat(precisionDecimalStr);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport isMobile from \"rc-util/es/isMobile\";\n/**\n * When click and hold on a button - the speed of auto changing the value.\n */\n\nvar STEP_INTERVAL = 200;\n/**\n * When click and hold on a button - the delay before auto changing the value.\n */\n\nvar STEP_DELAY = 600;\nexport default function StepHandler(_ref) {\n  var prefixCls = _ref.prefixCls,\n      upNode = _ref.upNode,\n      downNode = _ref.downNode,\n      upDisabled = _ref.upDisabled,\n      downDisabled = _ref.downDisabled,\n      onStep = _ref.onStep;\n  // ======================== Step ========================\n  var stepTimeoutRef = React.useRef();\n  var onStepRef = React.useRef();\n  onStepRef.current = onStep; // We will interval update step when hold mouse down\n\n  var onStepMouseDown = function onStepMouseDown(e, up) {\n    e.preventDefault();\n    onStepRef.current(up); // Loop step for interval\n\n    function loopStep() {\n      onStepRef.current(up);\n      stepTimeoutRef.current = setTimeout(loopStep, STEP_INTERVAL);\n    } // First time press will wait some time to trigger loop step update\n\n\n    stepTimeoutRef.current = setTimeout(loopStep, STEP_DELAY);\n  };\n\n  var onStopStep = function onStopStep() {\n    clearTimeout(stepTimeoutRef.current);\n  };\n\n  React.useEffect(function () {\n    return onStopStep;\n  }, []); // ======================= Render =======================\n\n  if (isMobile()) {\n    return null;\n  }\n\n  var handlerClassName = \"\".concat(prefixCls, \"-handler\");\n  var upClassName = classNames(handlerClassName, \"\".concat(handlerClassName, \"-up\"), _defineProperty({}, \"\".concat(handlerClassName, \"-up-disabled\"), upDisabled));\n  var downClassName = classNames(handlerClassName, \"\".concat(handlerClassName, \"-down\"), _defineProperty({}, \"\".concat(handlerClassName, \"-down-disabled\"), downDisabled));\n  var sharedHandlerProps = {\n    unselectable: 'on',\n    role: 'button',\n    onMouseUp: onStopStep,\n    onMouseLeave: onStopStep\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(handlerClassName, \"-wrap\")\n  }, /*#__PURE__*/React.createElement(\"span\", _extends({}, sharedHandlerProps, {\n    onMouseDown: function onMouseDown(e) {\n      onStepMouseDown(e, true);\n    },\n    \"aria-label\": \"Increase Value\",\n    \"aria-disabled\": upDisabled,\n    className: upClassName\n  }), upNode || /*#__PURE__*/React.createElement(\"span\", {\n    unselectable: \"on\",\n    className: \"\".concat(prefixCls, \"-handler-up-inner\")\n  })), /*#__PURE__*/React.createElement(\"span\", _extends({}, sharedHandlerProps, {\n    onMouseDown: function onMouseDown(e) {\n      onStepMouseDown(e, false);\n    },\n    \"aria-label\": \"Decrease Value\",\n    \"aria-disabled\": downDisabled,\n    className: downClassName\n  }), downNode || /*#__PURE__*/React.createElement(\"span\", {\n    unselectable: \"on\",\n    className: \"\".concat(prefixCls, \"-handler-down-inner\")\n  })));\n}","import * as React from 'react';\nimport canUseDom from \"rc-util/es/Dom/canUseDom\";\nexport var useLayoutEffect = canUseDom() ? React.useLayoutEffect : React.useEffect;","import * as React from 'react';\nimport { useLayoutEffect } from './useLayoutEffect';\n/**\n * Work as `componentDidUpdate`\n */\n\nexport default function useUpdateEffect(callback, condition) {\n  var initRef = React.useRef(false);\n  useLayoutEffect(function () {\n    if (!initRef.current) {\n      initRef.current = true;\n      return undefined;\n    }\n\n    return callback();\n  }, condition);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"className\", \"style\", \"min\", \"max\", \"step\", \"defaultValue\", \"value\", \"disabled\", \"readOnly\", \"upHandler\", \"downHandler\", \"keyboard\", \"controls\", \"stringMode\", \"parser\", \"formatter\", \"precision\", \"decimalSeparator\", \"onChange\", \"onInput\", \"onPressEnter\", \"onStep\"];\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport getMiniDecimal, { toFixed } from './utils/MiniDecimal';\nimport StepHandler from './StepHandler';\nimport { getNumberPrecision, num2str, validateNumber } from './utils/numberUtil';\nimport useCursor from './hooks/useCursor';\nimport useUpdateEffect from './hooks/useUpdateEffect';\nimport useFrame from './hooks/useFrame';\n/**\n * We support `stringMode` which need handle correct type when user call in onChange\n */\n\nvar getDecimalValue = function getDecimalValue(stringMode, decimalValue) {\n  if (stringMode || decimalValue.isEmpty()) {\n    return decimalValue.toString();\n  }\n\n  return decimalValue.toNumber();\n};\n\nvar getDecimalIfValidate = function getDecimalIfValidate(value) {\n  var decimal = getMiniDecimal(value);\n  return decimal.isInvalidate() ? null : decimal;\n};\n\nvar InputNumber = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? 'rc-input-number' : _props$prefixCls,\n      className = props.className,\n      style = props.style,\n      min = props.min,\n      max = props.max,\n      _props$step = props.step,\n      step = _props$step === void 0 ? 1 : _props$step,\n      defaultValue = props.defaultValue,\n      value = props.value,\n      disabled = props.disabled,\n      readOnly = props.readOnly,\n      upHandler = props.upHandler,\n      downHandler = props.downHandler,\n      keyboard = props.keyboard,\n      _props$controls = props.controls,\n      controls = _props$controls === void 0 ? true : _props$controls,\n      stringMode = props.stringMode,\n      parser = props.parser,\n      formatter = props.formatter,\n      precision = props.precision,\n      decimalSeparator = props.decimalSeparator,\n      onChange = props.onChange,\n      onInput = props.onInput,\n      onPressEnter = props.onPressEnter,\n      onStep = props.onStep,\n      inputProps = _objectWithoutProperties(props, _excluded);\n\n  var inputClassName = \"\".concat(prefixCls, \"-input\");\n  var inputRef = React.useRef(null);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focus = _React$useState2[0],\n      setFocus = _React$useState2[1];\n\n  var userTypingRef = React.useRef(false);\n  var compositionRef = React.useRef(false); // ============================ Value =============================\n  // Real value control\n\n  var _React$useState3 = React.useState(function () {\n    return getMiniDecimal(value !== null && value !== void 0 ? value : defaultValue);\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      decimalValue = _React$useState4[0],\n      setDecimalValue = _React$useState4[1];\n\n  function setUncontrolledDecimalValue(newDecimal) {\n    if (value === undefined) {\n      setDecimalValue(newDecimal);\n    }\n  } // ====================== Parser & Formatter ======================\n\n  /**\n   * `precision` is used for formatter & onChange.\n   * It will auto generate by `value` & `step`.\n   * But it will not block user typing.\n   *\n   * Note: Auto generate `precision` is used for legacy logic.\n   * We should remove this since we already support high precision with BigInt.\n   *\n   * @param number  Provide which number should calculate precision\n   * @param userTyping  Change by user typing\n   */\n\n\n  var getPrecision = React.useCallback(function (numStr, userTyping) {\n    if (userTyping) {\n      return undefined;\n    }\n\n    if (precision >= 0) {\n      return precision;\n    }\n\n    return Math.max(getNumberPrecision(numStr), getNumberPrecision(step));\n  }, [precision, step]); // >>> Parser\n\n  var mergedParser = React.useCallback(function (num) {\n    var numStr = String(num);\n\n    if (parser) {\n      return parser(numStr);\n    }\n\n    var parsedStr = numStr;\n\n    if (decimalSeparator) {\n      parsedStr = parsedStr.replace(decimalSeparator, '.');\n    } // [Legacy] We still support auto convert `$ 123,456` to `123456`\n\n\n    return parsedStr.replace(/[^\\w.-]+/g, '');\n  }, [parser, decimalSeparator]); // >>> Formatter\n\n  var inputValueRef = React.useRef('');\n  var mergedFormatter = React.useCallback(function (number, userTyping) {\n    if (formatter) {\n      return formatter(number, {\n        userTyping: userTyping,\n        input: String(inputValueRef.current)\n      });\n    }\n\n    var str = typeof number === 'number' ? num2str(number) : number; // User typing will not auto format with precision directly\n\n    if (!userTyping) {\n      var mergedPrecision = getPrecision(str, userTyping);\n\n      if (validateNumber(str) && (decimalSeparator || mergedPrecision >= 0)) {\n        // Separator\n        var separatorStr = decimalSeparator || '.';\n        str = toFixed(str, separatorStr, mergedPrecision);\n      }\n    }\n\n    return str;\n  }, [formatter, getPrecision, decimalSeparator]); // ========================== InputValue ==========================\n\n  /**\n   * Input text value control\n   *\n   * User can not update input content directly. It update with follow rules by priority:\n   *  1. controlled `value` changed\n   *    * [SPECIAL] Typing like `1.` should not immediately convert to `1`\n   *  2. User typing with format (not precision)\n   *  3. Blur or Enter trigger revalidate\n   */\n\n  var _React$useState5 = React.useState(function () {\n    var initValue = defaultValue !== null && defaultValue !== void 0 ? defaultValue : value;\n\n    if (decimalValue.isInvalidate() && ['string', 'number'].includes(_typeof(initValue))) {\n      return Number.isNaN(initValue) ? '' : initValue;\n    }\n\n    return mergedFormatter(decimalValue.toString(), false);\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      inputValue = _React$useState6[0],\n      setInternalInputValue = _React$useState6[1];\n\n  inputValueRef.current = inputValue; // Should always be string\n\n  function setInputValue(newValue, userTyping) {\n    setInternalInputValue(mergedFormatter( // Invalidate number is sometime passed by external control, we should let it go\n    // Otherwise is controlled by internal interactive logic which check by userTyping\n    // You can ref 'show limited value when input is not focused' test for more info.\n    newValue.isInvalidate() ? newValue.toString(false) : newValue.toString(!userTyping), userTyping));\n  } // >>> Max & Min limit\n\n\n  var maxDecimal = React.useMemo(function () {\n    return getDecimalIfValidate(max);\n  }, [max]);\n  var minDecimal = React.useMemo(function () {\n    return getDecimalIfValidate(min);\n  }, [min]);\n  var upDisabled = React.useMemo(function () {\n    if (!maxDecimal || !decimalValue || decimalValue.isInvalidate()) {\n      return false;\n    }\n\n    return maxDecimal.lessEquals(decimalValue);\n  }, [maxDecimal, decimalValue]);\n  var downDisabled = React.useMemo(function () {\n    if (!minDecimal || !decimalValue || decimalValue.isInvalidate()) {\n      return false;\n    }\n\n    return decimalValue.lessEquals(minDecimal);\n  }, [minDecimal, decimalValue]); // Cursor controller\n\n  var _useCursor = useCursor(inputRef.current, focus),\n      _useCursor2 = _slicedToArray(_useCursor, 2),\n      recordCursor = _useCursor2[0],\n      restoreCursor = _useCursor2[1]; // ============================= Data =============================\n\n  /**\n   * Find target value closet within range.\n   * e.g. [11, 28]:\n   *    3  => 11\n   *    23 => 23\n   *    99 => 28\n   */\n\n\n  var getRangeValue = function getRangeValue(target) {\n    // target > max\n    if (maxDecimal && !target.lessEquals(maxDecimal)) {\n      return maxDecimal;\n    } // target < min\n\n\n    if (minDecimal && !minDecimal.lessEquals(target)) {\n      return minDecimal;\n    }\n\n    return null;\n  };\n  /**\n   * Check value is in [min, max] range\n   */\n\n\n  var isInRange = function isInRange(target) {\n    return !getRangeValue(target);\n  };\n  /**\n   * Trigger `onChange` if value validated and not equals of origin.\n   * Return the value that re-align in range.\n   */\n\n\n  var triggerValueUpdate = function triggerValueUpdate(newValue, userTyping) {\n    var updateValue = newValue;\n    var isRangeValidate = isInRange(updateValue) || updateValue.isEmpty(); // Skip align value when trigger value is empty.\n    // We just trigger onChange(null)\n    // This should not block user typing\n\n    if (!updateValue.isEmpty() && !userTyping) {\n      // Revert value in range if needed\n      updateValue = getRangeValue(updateValue) || updateValue;\n      isRangeValidate = true;\n    }\n\n    if (!readOnly && !disabled && isRangeValidate) {\n      var numStr = updateValue.toString();\n      var mergedPrecision = getPrecision(numStr, userTyping);\n\n      if (mergedPrecision >= 0) {\n        updateValue = getMiniDecimal(toFixed(numStr, '.', mergedPrecision));\n      } // Trigger event\n\n\n      if (!updateValue.equals(decimalValue)) {\n        setUncontrolledDecimalValue(updateValue);\n        onChange === null || onChange === void 0 ? void 0 : onChange(updateValue.isEmpty() ? null : getDecimalValue(stringMode, updateValue)); // Reformat input if value is not controlled\n\n        if (value === undefined) {\n          setInputValue(updateValue, userTyping);\n        }\n      }\n\n      return updateValue;\n    }\n\n    return decimalValue;\n  }; // ========================== User Input ==========================\n\n\n  var onNextPromise = useFrame(); // >>> Collect input value\n\n  var collectInputValue = function collectInputValue(inputStr) {\n    recordCursor(); // Update inputValue incase input can not parse as number\n\n    setInternalInputValue(inputStr); // Parse number\n\n    if (!compositionRef.current) {\n      var finalValue = mergedParser(inputStr);\n      var finalDecimal = getMiniDecimal(finalValue);\n\n      if (!finalDecimal.isNaN()) {\n        triggerValueUpdate(finalDecimal, true);\n      }\n    } // Trigger onInput later to let user customize value if they want do handle something after onChange\n\n\n    onInput === null || onInput === void 0 ? void 0 : onInput(inputStr); // optimize for chinese input experience\n    // https://github.com/ant-design/ant-design/issues/8196\n\n    onNextPromise(function () {\n      var nextInputStr = inputStr;\n\n      if (!parser) {\n        nextInputStr = inputStr.replace(/。/g, '.');\n      }\n\n      if (nextInputStr !== inputStr) {\n        collectInputValue(nextInputStr);\n      }\n    });\n  }; // >>> Composition\n\n\n  var onCompositionStart = function onCompositionStart() {\n    compositionRef.current = true;\n  };\n\n  var onCompositionEnd = function onCompositionEnd() {\n    compositionRef.current = false;\n    collectInputValue(inputRef.current.value);\n  }; // >>> Input\n\n\n  var onInternalInput = function onInternalInput(e) {\n    collectInputValue(e.target.value);\n  }; // ============================= Step =============================\n\n\n  var onInternalStep = function onInternalStep(up) {\n    var _inputRef$current;\n\n    // Ignore step since out of range\n    if (up && upDisabled || !up && downDisabled) {\n      return;\n    } // Clear typing status since it may caused by up & down key.\n    // We should sync with input value.\n\n\n    userTypingRef.current = false;\n    var stepDecimal = getMiniDecimal(step);\n\n    if (!up) {\n      stepDecimal = stepDecimal.negate();\n    }\n\n    var target = (decimalValue || getMiniDecimal(0)).add(stepDecimal.toString());\n    var updatedValue = triggerValueUpdate(target, false);\n    onStep === null || onStep === void 0 ? void 0 : onStep(getDecimalValue(stringMode, updatedValue), {\n      offset: step,\n      type: up ? 'up' : 'down'\n    });\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  }; // ============================ Flush =============================\n\n  /**\n   * Flush current input content to trigger value change & re-formatter input if needed\n   */\n\n\n  var flushInputValue = function flushInputValue(userTyping) {\n    var parsedValue = getMiniDecimal(mergedParser(inputValue));\n    var formatValue = parsedValue;\n\n    if (!parsedValue.isNaN()) {\n      // Only validate value or empty value can be re-fill to inputValue\n      // Reassign the formatValue within ranged of trigger control\n      formatValue = triggerValueUpdate(parsedValue, userTyping);\n    } else {\n      formatValue = decimalValue;\n    }\n\n    if (value !== undefined) {\n      // Reset back with controlled value first\n      setInputValue(decimalValue, false);\n    } else if (!formatValue.isNaN()) {\n      // Reset input back since no validate value\n      setInputValue(formatValue, false);\n    }\n  };\n\n  var onKeyDown = function onKeyDown(event) {\n    var which = event.which;\n    userTypingRef.current = true;\n\n    if (which === KeyCode.ENTER) {\n      if (!compositionRef.current) {\n        userTypingRef.current = false;\n      }\n\n      flushInputValue(false);\n      onPressEnter === null || onPressEnter === void 0 ? void 0 : onPressEnter(event);\n    }\n\n    if (keyboard === false) {\n      return;\n    } // Do step\n\n\n    if (!compositionRef.current && [KeyCode.UP, KeyCode.DOWN].includes(which)) {\n      onInternalStep(KeyCode.UP === which);\n      event.preventDefault();\n    }\n  };\n\n  var onKeyUp = function onKeyUp() {\n    userTypingRef.current = false;\n  }; // >>> Focus & Blur\n\n\n  var onBlur = function onBlur() {\n    flushInputValue(false);\n    setFocus(false);\n    userTypingRef.current = false;\n  }; // ========================== Controlled ==========================\n  // Input by precision\n\n\n  useUpdateEffect(function () {\n    if (!decimalValue.isInvalidate()) {\n      setInputValue(decimalValue, false);\n    }\n  }, [precision]); // Input by value\n\n  useUpdateEffect(function () {\n    var newValue = getMiniDecimal(value);\n    setDecimalValue(newValue);\n    var currentParsedValue = getMiniDecimal(mergedParser(inputValue)); // When user typing from `1.2` to `1.`, we should not convert to `1` immediately.\n    // But let it go if user set `formatter`\n\n    if (!newValue.equals(currentParsedValue) || !userTypingRef.current || formatter) {\n      // Update value as effect\n      setInputValue(newValue, userTypingRef.current);\n    }\n  }, [value]); // ============================ Cursor ============================\n\n  useUpdateEffect(function () {\n    if (formatter) {\n      restoreCursor();\n    }\n  }, [inputValue]); // ============================ Render ============================\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focus), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-readonly\"), readOnly), _defineProperty(_classNames, \"\".concat(prefixCls, \"-not-a-number\"), decimalValue.isNaN()), _defineProperty(_classNames, \"\".concat(prefixCls, \"-out-of-range\"), !decimalValue.isInvalidate() && !isInRange(decimalValue)), _classNames)),\n    style: style,\n    onFocus: function onFocus() {\n      setFocus(true);\n    },\n    onBlur: onBlur,\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    onCompositionStart: onCompositionStart,\n    onCompositionEnd: onCompositionEnd\n  }, controls && /*#__PURE__*/React.createElement(StepHandler, {\n    prefixCls: prefixCls,\n    upNode: upHandler,\n    downNode: downHandler,\n    upDisabled: upDisabled,\n    downDisabled: downDisabled,\n    onStep: onInternalStep\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(inputClassName, \"-wrap\")\n  }, /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoComplete: \"off\",\n    role: \"spinbutton\",\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    \"aria-valuenow\": decimalValue.isInvalidate() ? null : decimalValue.toString(),\n    step: step\n  }, inputProps, {\n    ref: composeRef(inputRef, ref),\n    className: inputClassName,\n    value: inputValue,\n    onChange: onInternalInput,\n    disabled: disabled,\n    readOnly: readOnly\n  }))));\n});\nInputNumber.displayName = 'InputNumber';\nexport default InputNumber;","import { useRef } from 'react';\nimport warning from \"rc-util/es/warning\";\n/**\n * Keep input cursor in the correct position if possible.\n * Is this necessary since we have `formatter` which may mass the content?\n */\n\nexport default function useCursor(input, focused) {\n  var selectionRef = useRef(null);\n\n  function recordCursor() {\n    // Record position\n    try {\n      var start = input.selectionStart,\n          end = input.selectionEnd,\n          value = input.value;\n      var beforeTxt = value.substring(0, start);\n      var afterTxt = value.substring(end);\n      selectionRef.current = {\n        start: start,\n        end: end,\n        value: value,\n        beforeTxt: beforeTxt,\n        afterTxt: afterTxt\n      };\n    } catch (e) {// Fix error in Chrome:\n      // Failed to read the 'selectionStart' property from 'HTMLInputElement'\n      // http://stackoverflow.com/q/21177489/3040605\n    }\n  }\n  /**\n   * Restore logic:\n   *  1. back string same\n   *  2. start string same\n   */\n\n\n  function restoreCursor() {\n    if (input && selectionRef.current && focused) {\n      try {\n        var value = input.value;\n        var _selectionRef$current = selectionRef.current,\n            beforeTxt = _selectionRef$current.beforeTxt,\n            afterTxt = _selectionRef$current.afterTxt,\n            start = _selectionRef$current.start;\n        var startPos = value.length;\n\n        if (value.endsWith(afterTxt)) {\n          startPos = value.length - selectionRef.current.afterTxt.length;\n        } else if (value.startsWith(beforeTxt)) {\n          startPos = beforeTxt.length;\n        } else {\n          var beforeLastChar = beforeTxt[start - 1];\n          var newIndex = value.indexOf(beforeLastChar, start - 1);\n\n          if (newIndex !== -1) {\n            startPos = newIndex + 1;\n          }\n        }\n\n        input.setSelectionRange(startPos, startPos);\n      } catch (e) {\n        warning(false, \"Something warning of cursor restore. Please fire issue about this: \".concat(e.message));\n      }\n    }\n  }\n\n  return [recordCursor, restoreCursor];\n}","import { useRef, useEffect } from 'react';\nimport raf from \"rc-util/es/raf\";\n/**\n * Always trigger latest once when call multiple time\n */\n\nexport default (function () {\n  var idRef = useRef(0);\n\n  var cleanUp = function cleanUp() {\n    raf.cancel(idRef.current);\n  };\n\n  useEffect(function () {\n    return cleanUp;\n  }, []);\n  return function (callback) {\n    cleanUp();\n    idRef.current = raf(function () {\n      callback();\n    });\n  };\n});","import InputNumber from './InputNumber';\nexport default InputNumber;","// This icon file is generated automatically.\nvar UpOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z\" } }] }, \"name\": \"up\", \"theme\": \"outlined\" };\nexport default UpOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UpOutlinedSvg from \"@ant-design/icons-svg/es/asn/UpOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UpOutlined = function UpOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UpOutlinedSvg\n  }));\n};\n\nUpOutlined.displayName = 'UpOutlined';\nexport default /*#__PURE__*/React.forwardRef(UpOutlined);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport RcInputNumber from 'rc-input-number';\nimport UpOutlined from \"@ant-design/icons/es/icons/UpOutlined\";\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport { ConfigContext } from '../config-provider';\nimport SizeContext from '../config-provider/SizeContext';\nimport { cloneElement } from '../_util/reactNode';\nvar InputNumber = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _classNames;\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var size = React.useContext(SizeContext);\n\n  var className = props.className,\n      customizeSize = props.size,\n      customizePrefixCls = props.prefixCls,\n      addonBefore = props.addonBefore,\n      addonAfter = props.addonAfter,\n      _props$bordered = props.bordered,\n      bordered = _props$bordered === void 0 ? true : _props$bordered,\n      readOnly = props.readOnly,\n      others = __rest(props, [\"className\", \"size\", \"prefixCls\", \"addonBefore\", \"addonAfter\", \"bordered\", \"readOnly\"]);\n\n  var prefixCls = getPrefixCls('input-number', customizePrefixCls);\n  var upIcon = /*#__PURE__*/React.createElement(UpOutlined, {\n    className: \"\".concat(prefixCls, \"-handler-up-inner\")\n  });\n  var downIcon = /*#__PURE__*/React.createElement(DownOutlined, {\n    className: \"\".concat(prefixCls, \"-handler-down-inner\")\n  });\n  var mergeSize = customizeSize || size;\n  var inputNumberClass = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-lg\"), mergeSize === 'large'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-sm\"), mergeSize === 'small'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-readonly\"), readOnly), _defineProperty(_classNames, \"\".concat(prefixCls, \"-borderless\"), !bordered), _classNames), className);\n  var element = /*#__PURE__*/React.createElement(RcInputNumber, _extends({\n    ref: ref,\n    className: inputNumberClass,\n    upHandler: upIcon,\n    downHandler: downIcon,\n    prefixCls: prefixCls,\n    readOnly: readOnly\n  }, others));\n\n  if (addonBefore != null || addonAfter != null) {\n    var _classNames3;\n\n    var wrapperClassName = \"\".concat(prefixCls, \"-group\");\n    var addonClassName = \"\".concat(wrapperClassName, \"-addon\");\n    var addonBeforeNode = addonBefore ? /*#__PURE__*/React.createElement(\"div\", {\n      className: addonClassName\n    }, addonBefore) : null;\n    var addonAfterNode = addonAfter ? /*#__PURE__*/React.createElement(\"div\", {\n      className: addonClassName\n    }, addonAfter) : null;\n    var mergedWrapperClassName = classNames(\"\".concat(prefixCls, \"-wrapper\"), wrapperClassName, _defineProperty({}, \"\".concat(wrapperClassName, \"-rtl\"), direction === 'rtl'));\n    var mergedGroupClassName = classNames(\"\".concat(prefixCls, \"-group-wrapper\"), (_classNames3 = {}, _defineProperty(_classNames3, \"\".concat(prefixCls, \"-group-wrapper-sm\"), size === 'small'), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-group-wrapper-lg\"), size === 'large'), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-group-wrapper-rtl\"), direction === 'rtl'), _classNames3), className);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: mergedGroupClassName,\n      style: props.style\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: mergedWrapperClassName\n    }, addonBeforeNode, cloneElement(element, {\n      style: null\n    }), addonAfterNode));\n  }\n\n  return element;\n});\nexport default InputNumber;","import { Badge, Button, Divider, Input, Modal, Radio, Table } from \"antd\";\nimport AvatarStatus from \"components/shared-components/AvatarStatus\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport Flex from \"components/shared-components/Flex\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport utils from \"utils\";\nimport NumberFormat from \"react-number-format\";\nimport { getProduct } from \"redux/actions/Project\";\n\nconst getStockStatus = (stockCount) => {\n  if (stockCount >= 10) {\n    return (\n      <>\n        <Badge status=\"success\" />\n        <span>재고 있음</span>\n      </>\n    );\n  }\n  if (stockCount < 10 && stockCount > 0) {\n    return (\n      <>\n        <Badge status=\"warning\" />\n        <span>소량 남음</span>\n      </>\n    );\n  }\n  if (stockCount === 0) {\n    return (\n      <>\n        <Badge status=\"error\" />\n        <span>재고 없음</span>\n      </>\n    );\n  }\n  return null;\n};\n\nfunction ProductModal(props) {\n  const { handleOk, handleCancel, getProduct, visible, product } = props;\n  const [customer, setCustomer] = useState();\n  const rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n      setCustomer(selectedRows[0]);\n    },\n    getCheckboxProps: (record) => ({\n      disabled: record.qty === 0,\n      name: record.name,\n    }),\n  };\n  const tableColumns = [\n    {\n      title: \"ID\",\n      dataIndex: \"id\",\n    },\n    {\n      title: \"상품\",\n      dataIndex: \"name\",\n      render: (_, record) => (\n        <div className=\"d-flex\">\n          <span>{record.name}</span>\n        </div>\n      ),\n      sorter: (a, b) => utils.antdTableSorter(a, b, \"name\"),\n    },\n    {\n      title: \"카테고리\",\n      dataIndex: \"categoryName\",\n      sorter: (a, b) => utils.antdTableSorter(a, b, \"categoryName\"),\n    },\n    {\n      title: \"가격\",\n      dataIndex: \"price\",\n      render: (price) => (\n        <div>\n          <NumberFormat displayType={\"text\"} value={price} prefix={\"₩\"} thousandSeparator={true} />\n        </div>\n      ),\n      sorter: (a, b) => utils.antdTableSorter(a, b, \"price\"),\n    },\n    {\n      title: \"수량\",\n      dataIndex: \"qty\",\n      sorter: (a, b) => utils.antdTableSorter(a, b, \"qty\"),\n    },\n    {\n      title: \"상태\",\n      dataIndex: \"qty\",\n      render: (qty) => <Flex alignItems=\"center\">{getStockStatus(qty)}</Flex>,\n      sorter: (a, b) => utils.antdTableSorter(a, b, \"qty\"),\n    },\n  ];\n  const onSearch = (e) => {\n    const value = e.currentTarget.value;\n    getProduct(value);\n  };\n  const initializeList = (e) => {\n    if (e.currentTarget.value === \"\") {\n      getProduct();\n    }\n  };\n  return (\n    <div>\n      <Modal\n        title=\"Basic Modal\"\n        visible={visible}\n        onOk={() => {\n          handleOk(customer);\n        }}\n        onCancel={handleCancel}\n        width={700}\n      >\n        <Input\n          placeholder=\"Search\"\n          prefix={<SearchOutlined />}\n          onPressEnter={(e) => onSearch(e)}\n          onChange={(e) => initializeList(e)}\n        />\n        <Table\n          columns={tableColumns}\n          rowSelection={{\n            type: \"radio\",\n            ...rowSelection,\n          }}\n          rowKey={\"id\"}\n          dataSource={product ? product.result : \"\"}\n        />\n      </Modal>\n    </div>\n  );\n}\n\nexport default ProductModal;\n","import { Button, Card, InputNumber, Modal, Table, Upload } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport ProductModal from \"../components/ProductModal\";\nimport { createOrderItem, deleteOrder, getProduct, resetProject } from \"redux/actions/Project\";\nimport { connect } from \"react-redux\";\nimport { API_BASE_URL } from \"configs/AppConfig\";\nimport { useHistory } from \"react-router-dom\";\nimport utils from \"utils\";\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n  });\n}\nconst uploadButton = (\n  <div>\n    <PlusOutlined />\n    <div className=\"ant-upload-text\">Upload</div>\n  </div>\n);\n\nfunction selectProduct(props) {\n  const { location, loading, getProduct, product, resetProject, createOrderItem, deleteOrder } = props;\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [validator, setValidator] = useState(false);\n  const [previewImage, setPreviewImage] = useState();\n  const [fileList, setFileList] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [totalPrice, setTotalPrice] = useState();\n  // productModal\n  const [showProductModal, setShowProductModal] = useState(false);\n  const [cart, setCart] = useState([]);\n  const history = useHistory();\n  const handleCancel = () => {\n    setPreviewVisible(false);\n  };\n  const handlePreview = async (file) => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n    setPreviewImage(file.url || file.preview);\n    setPreviewVisible(true);\n  };\n\n  const handleproducts = (id, value) => {\n    if (products.length != 0) {\n      for (const i in products) {\n        if (products[i].id === id) {\n          setProducts((prev) => {\n            prev[i].value = value;\n            return [...prev];\n          });\n        }\n      }\n    }\n  };\n  const deleteProduct = (id) => {\n    setProducts(products.filter((item) => item.id != id));\n    setCart(cart.filter((item) => item.id != id));\n  };\n  const goToOrder = () => {\n    if (products.length > 0) {\n      for (const i in products) {\n        createOrderItem(products[i]);\n      }\n      setValidator(true);\n    }\n\n    if (products != []) {\n      location.state.orderPk = null;\n      history.push(\"/app/sales\");\n    }\n  };\n\n  const handleChange = ({ fileList }) => {\n    setFileList(fileList);\n  };\n\n  const columns = [\n    {\n      title: \"상품\",\n      dataIndex: \"name\",\n      render: (_, record) => <span>{record.name}</span>,\n      sorter: (a, b) => utils.antdTableSorter(a, b, \"name\"),\n    },\n    {\n      title: \"수량\",\n      dataIndex: \"qty\",\n      render: (_, record) => (\n        <InputNumber min={1} max={record.qty} defaultValue={1} onChange={(value) => handleproducts(record.id, value)} />\n      ),\n      sorter: (a, b) => utils.antdTableSorter(a, b, \"qty\"),\n    },\n    {\n      title: \"가격\",\n      dataIndex: \"price\",\n      render: (_, record) => (\n        <span>{products.length != 0 ? products.find((x) => x.id === record.id).value * record.price : \"\"}원</span>\n      ),\n      sorter: (a, b) => utils.antdTableSorter(a, b, \"price\"),\n    },\n    {\n      render: (_, record) => (\n        <Button\n          type=\"danger\"\n          onClick={() => {\n            deleteProduct(record.id);\n          }}\n        >\n          삭제\n        </Button>\n      ),\n    },\n  ];\n\n  // Product Functions\n  const handleShowModal = () => {\n    setShowProductModal(true);\n  };\n  const handleProductCancel = () => {\n    setShowProductModal(false);\n  };\n  const handleOk = (data) => {\n    if (!cart.includes(data)) {\n      setCart([...cart, data]);\n      setProducts([...products, { id: data.id, value: 1, order: location.state.orderPk[\"orderPk\"] }]);\n    }\n    setShowProductModal(false);\n  };\n\n  useEffect(() => {\n    getProduct();\n    return () => {\n      if (location.state.orderPk != null) {\n        deleteOrder(location.state.orderPk[\"orderPk\"]);\n        resetProject();\n      } else {\n        resetProject();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (!location.state.orderPk) {\n      history.goBack();\n    }\n  }, [location.state.orderPk]);\n  return (\n    <>\n      <Card title={\"주문 상품\"}>\n        <Button onClick={handleShowModal}>상품 추가</Button>\n        <Table dataSource={cart} rowKey={\"id\"} columns={columns}></Table>\n      </Card>\n      <Card title={\"주문 사진\"}>\n        <div className=\"clearfix\">\n          <Upload\n            name=\"file\"\n            action={`${API_BASE_URL}/api/v1/orders/orderImage/create/${location.state.orderPk[\"orderPk\"]}`}\n            headers={{\n              Authorization: `Bearer ${localStorage.getItem(\"auth_token\")}`,\n            }}\n            withCredentials={true}\n            listType=\"picture-card\"\n            fileList={fileList}\n            onPreview={handlePreview}\n            onChange={handleChange}\n          >\n            {fileList.length >= 4 ? null : uploadButton}\n          </Upload>\n          <Modal visible={previewVisible} footer={null} onCancel={handleCancel}>\n            <img alt=\"example\" style={{ width: \"100%\" }} src={previewImage} />\n          </Modal>\n        </div>\n      </Card>\n      <Button type=\"primary\" onClick={goToOrder}>\n        저장\n      </Button>\n      <ProductModal\n        visible={showProductModal}\n        getProduct={getProduct}\n        product={product}\n        handleOk={handleOk}\n        handleCancel={handleProductCancel}\n      />\n    </>\n  );\n}\n\nconst mapStateToProps = ({ project }) => {\n  const { loading, category, product, pages, orderPk } = project;\n  return { loading, product, pages, category, orderPk };\n};\n\nconst mapDispatchToProps = {\n  resetProject,\n  getProduct,\n  createOrderItem,\n  deleteOrder,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(selectProduct);\n"],"sourceRoot":""}