{"version":3,"sources":["redux/actions/Project.js","views/app-views/events/create/index.js"],"names":["dashboard","type","DASHBOARD","resetProject","RESET_PROJECT","account","date","sort","page","ACCOUNT","createAccount","value","CREATE_ACCOUNT","payload","updateTransaction","UPDATE_TRANSACTION","deleteTransaction","pk","DELETE_TRANSACTION","getOrderList","data","GET_ORDER_LIST","getOrderImages","GET_ORDERIMAGES","getOrderItems","GET_ORDERITEMS","createOrder","CREATE_ORDER","createOrderItem","CREATE_ORDERITEM","updateOrder","UPDATE_ORDER","deleteOrder","DELETE_ORDER","getCustomerList","GET_CUSTOMER_LIST","getCustomer","GET_CUSTOMER","createCustomer","CREATE_CUSTOMER","updateCustomer","UPDATE_CUSTOEMR","deleteCustomer","DELETE_CUSTOMER","getProduct","GET_PRODUCT_LIST","postProduct","CREATE_PRODUCT","updateProduct","UPDATE_PRODUCT","deleteProduct","DELETE_PRODUCT","getCategory","GET_CATEGORY_LIST","postCategory","CREATE_CATEGORY","updateCategory","UPDATE_CATEGORY","deleteCategory","DELETE_CATEGORY","getFarmList","GET_FARM_LIST","createFarm","CREATE_FARM","updateFarm","UPDATE_FARM","deleteFarm","DELETE_FARM","getLogList","GET_LOG_LIST","createLog","CREATE_LOG","updateLog","UPDATE_LOG","deleteLog","logPk","DELETE_LOG","AddFarm","props","loading","farmPk","useState","setPreviewVisible","setPreviewImage","fileList","setFileList","history","useHistory","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","uploadButton","PlusOutlined","className","handlePreview","url","preview","originFileObj","useEffect","onFinish","xs","sm","md","lg","xl","title","Item","name","label","rules","required","htmlType","action","API_BASE_URL","headers","Authorization","localStorage","getItem","withCredentials","listType","onPreview","onChange","length","justify","onClick","push","mapDispatchToProps","connect","project"],"mappings":"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","file":"static/js/24.603af821.chunk.js","sourcesContent":["import {\n  ACCOUNT,\n  CREATE_ACCOUNT,\n  DASHBOARD,\n  UPDATE_TRANSACTION,\n  RESET_PROJECT,\n  DELETE_TRANSACTION,\n  GET_ORDER_LIST,\n  GET_ORDER,\n  GET_CUSTOMER_LIST,\n  GET_CUSTOMER,\n  CREATE_CUSTOMER,\n  UPDATE_CUSTOEMR,\n  DELETE_CUSTOMER,\n  GET_PRODUCT_LIST,\n  CREATE_PRODUCT,\n  UPDATE_PRODUCT,\n  DELETE_PRODUCT,\n  GET_CATEGORY_LIST,\n  CREATE_CATEGORY,\n  UPDATE_CATEGORY,\n  DELETE_CATEGORY,\n  CREATE_ORDER,\n  UPDATE_ORDER,\n  DELETE_ORDER,\n  CREATE_ORDERITEM,\n  CREATE_ORDERIMAGE,\n  GET_ORDERIMAGES,\n  GET_ORDERITEMS,\n  GET_FARM_LIST,\n  CREATE_FARM,\n  UPDATE_FARM,\n  DELETE_FARM,\n  GET_LOG_LIST,\n  CREATE_LOG,\n  UPDATE_LOG,\n  DELETE_LOG,\n} from \"../constants/Project\";\n\nexport const dashboard = () => {\n  return {\n    type: DASHBOARD,\n  };\n};\n\nexport const resetProject = () => {\n  return {\n    type: RESET_PROJECT,\n  };\n};\n\nexport const account = (date, sort, page) => {\n  return {\n    type: ACCOUNT,\n    date,\n    sort,\n    page,\n  };\n};\n\nexport const createAccount = (value) => {\n  return {\n    type: CREATE_ACCOUNT,\n    payload: value,\n  };\n};\n\nexport const updateTransaction = (value) => {\n  return {\n    type: UPDATE_TRANSACTION,\n    payload: value,\n  };\n};\n\nexport const deleteTransaction = (pk) => {\n  return {\n    type: DELETE_TRANSACTION,\n    payload: pk,\n  };\n};\n\n// order\nexport const getOrderList = (data) => {\n  return {\n    type: GET_ORDER_LIST,\n    data: data,\n  };\n};\n\nexport const getOrderImages = (data) => {\n  return {\n    type: GET_ORDERIMAGES,\n    data: data,\n  };\n};\n\nexport const getOrderItems = (data) => {\n  return {\n    type: GET_ORDERITEMS,\n    data: data,\n  };\n};\n\nexport const createOrder = (data) => {\n  return {\n    type: CREATE_ORDER,\n    data,\n  };\n};\n\nexport const createOrderItem = (data) => {\n  return {\n    type: CREATE_ORDERITEM,\n    data,\n  };\n};\n\nexport const updateOrder = (data) => {\n  return {\n    type: UPDATE_ORDER,\n    data,\n  };\n};\n\nexport const deleteOrder = (pk) => {\n  return {\n    type: DELETE_ORDER,\n    pk,\n  };\n};\n\nexport const createOrderImage = (data) => {\n  return {\n    type: CREATE_ORDERIMAGE,\n    data,\n  };\n};\n\n// customer\nexport const getCustomerList = (data) => {\n  return {\n    type: GET_CUSTOMER_LIST,\n    data,\n  };\n};\n\nexport const getCustomer = (pk) => {\n  return {\n    type: GET_CUSTOMER,\n    payload: pk,\n  };\n};\n\nexport const createCustomer = (data) => {\n  return {\n    type: CREATE_CUSTOMER,\n    data,\n  };\n};\n\nexport const updateCustomer = (data) => {\n  return {\n    type: UPDATE_CUSTOEMR,\n    data: data,\n  };\n};\n\nexport const deleteCustomer = (pk) => {\n  return {\n    type: DELETE_CUSTOMER,\n    pk,\n  };\n};\n\n//PRODUCT\nexport const getProduct = (data) => {\n  return {\n    type: GET_PRODUCT_LIST,\n    data,\n  };\n};\n\nexport const postProduct = (data) => {\n  return {\n    type: CREATE_PRODUCT,\n    data,\n  };\n};\n\nexport const updateProduct = (data) => {\n  return {\n    type: UPDATE_PRODUCT,\n    data,\n  };\n};\n\nexport const deleteProduct = (pk) => {\n  return {\n    type: DELETE_PRODUCT,\n    pk,\n  };\n};\n\n//Category\nexport const getCategory = (data) => {\n  return {\n    type: GET_CATEGORY_LIST,\n    data,\n  };\n};\n\nexport const postCategory = (data) => {\n  return {\n    type: CREATE_CATEGORY,\n    data,\n  };\n};\n\nexport const updateCategory = (data) => {\n  return {\n    type: UPDATE_CATEGORY,\n    data,\n  };\n};\n\nexport const deleteCategory = (pk) => {\n  return {\n    type: DELETE_CATEGORY,\n    pk,\n  };\n};\n\n// Farms\nexport const getFarmList = (data) => {\n  return {\n    type: GET_FARM_LIST,\n    data,\n  };\n};\n\nexport const createFarm = (data) => {\n  return {\n    type: CREATE_FARM,\n    data,\n  };\n};\n\nexport const updateFarm = (data) => {\n  return {\n    type: UPDATE_FARM,\n    data,\n  };\n};\n\nexport const deleteFarm = (pk) => {\n  return {\n    type: DELETE_FARM,\n    pk,\n  };\n};\n\n//LOGS\nexport const getLogList = (data, date, page) => {\n  return {\n    type: GET_LOG_LIST,\n    data,\n    date,\n    page,\n  };\n};\n\nexport const createLog = (data, pk) => {\n  return {\n    type: CREATE_LOG,\n    data,\n    pk,\n  };\n};\n\nexport const updateLog = (data, pk) => {\n  return {\n    type: UPDATE_LOG,\n    data,\n    pk,\n  };\n};\n\nexport const deleteLog = (pk, logPk) => {\n  return {\n    type: DELETE_LOG,\n    pk,\n    logPk,\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  resetProject,\n  getCustomerList,\n  getCustomer,\n  updateCustomer,\n  deleteCustomer,\n  createCustomer,\n  createFarm,\n} from \"redux/actions/Project\";\nimport Swal from \"sweetalert2\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Card, Form, Input, message, Row, Upload } from \"antd\";\nimport Dragger from \"antd/lib/upload/Dragger\";\nimport { ImageSvg } from \"assets/svg/icon\";\nimport { FileExcelOutlined, LoadingOutlined, ReloadOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport CustomIcon from \"components/util-components/CustomIcon\";\nimport { get } from \"lodash\";\nimport { API_BASE_URL } from \"configs/AppConfig\";\nexport const AddFarm = (props) => {\n  const { loading, resetProject, createFarm, farmPk } = props;\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState();\n  const [fileList, setFileList] = useState([]);\n  const history = useHistory();\n  const handleSubmit = (data) => {\n    createFarm(data);\n  };\n\n  function getBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = (error) => reject(error);\n    });\n  }\n  const handleChange = ({ fileList }) => {\n    setFileList(fileList);\n  };\n  const uploadButton = (\n    <div>\n      <PlusOutlined />\n      <div className=\"ant-upload-text\">Upload</div>\n    </div>\n  );\n  const handlePreview = async (file) => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n    setPreviewImage(file.url || file.preview);\n    setPreviewVisible(true);\n  };\n  useEffect(() => {\n    return () => {\n      resetProject();\n    };\n  }, []);\n  return (\n    <>\n      <Form onFinish={handleSubmit}>\n        <Card xs={24} sm={24} md={24} lg={24} xl={24} title={\"밭 추가하기\"}>\n          <Form.Item name={\"title\"} label={\"밭 이름\"} rules={[{ required: true }]}>\n            <Input></Input>\n          </Form.Item>\n          <Form.Item name={\"introduction\"} label={\"간략한 정보\"} rules={[{ required: true }]}>\n            <Input></Input>\n          </Form.Item>\n          <Form.Item name={\"description\"} label={\"세부 정보\"} rules={[{ required: true }]}>\n            <Input></Input>\n          </Form.Item>\n          {!farmPk ? (\n            <Button type=\"primary\" htmlType=\"submit\">\n              저장\n            </Button>\n          ) : (\n            \"\"\n          )}\n        </Card>\n      </Form>\n      {farmPk ? (\n        <Card title=\"밭 사진\">\n          <Upload\n            name=\"file\"\n            action={`${API_BASE_URL}/api/v1/farms/farm/upload/${farmPk.farmPk}/`}\n            headers={{\n              Authorization: `Bearer ${localStorage.getItem(\"auth_token\")}`,\n            }}\n            withCredentials={true}\n            listType=\"picture-card\"\n            fileList={fileList}\n            onPreview={handlePreview}\n            onChange={handleChange}\n          >\n            {fileList.length >= 1 ? null : uploadButton}\n          </Upload>\n        </Card>\n      ) : (\n        <Card title=\"이미지 추가: 위 밭 정보를 먼저 입력해주세요\"></Card>\n      )}\n      {farmPk ? (\n        <Row justify=\"center\">\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              history.push(\"/app/events/farms\");\n              resetProject();\n            }}\n          >\n            다음\n          </Button>\n        </Row>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = ({ project }) => {\n  const { loading, farmPk } = project;\n  return { loading, farmPk };\n};\n\nconst mapDispatchToProps = {\n  resetProject,\n  createFarm,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddFarm);\n"],"sourceRoot":""}